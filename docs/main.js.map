{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/api/jiraApi.ts","./src/app/api/projectxApi.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/calendar/calendar.component.ts","./src/app/components/calendar/calendar.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/instance/instance.component.ts","./src/app/components/instance/instance.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/login/login.module.ts","./src/app/components/manager/manager.component.ts","./src/app/components/manager/manager.component.html","./src/app/components/new-server/new-server.component.ts","./src/app/components/new-server/new-server.component.html","./src/app/components/oauth/callback/callback.component.ts","./src/app/components/oauth/callback/callback.component.html","./src/app/components/projects-list/instance-item/instance-item.component.ts","./src/app/components/projects-list/instance-item/instance-item.component.html","./src/app/components/projects-list/projects-list.component.ts","./src/app/components/projects-list/projects-list.component.html","./src/app/components/sprint-board/sprint-board.component.ts","./src/app/components/sprint-board/sprint-board.component.html","./src/app/components/update/update.component.ts","./src/app/components/update/update.component.html","./src/app/directives/custom-virtual-scroll-strategy.directive.ts","./src/app/guards/isLoginGuard.ts","./src/app/pipes/filter.pipe.ts","./src/app/services/array-utils.service.ts","./src/app/services/authService.service.ts","./src/app/services/date.service.ts","./src/app/services/projects.service.ts","./src/app/services/servers.service.ts","./src/app/services/updates.service.ts","./src/environments/environment.demo.ts","./src/main.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Sprint } from 'jira.js/out/agile/models';\r\nimport { Component, Issue, Project } from 'jira.js/out/version2/models';\r\nimport { lastValueFrom, map, Observable, of, tap } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport IUser from '../interfaces/user';\r\nimport { AuthService } from '../services/authService.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class JiraApi {\r\n  private jiraCallback = environment.jiraCallback;\r\n  private jiraClientSecret = environment.jiraClientSecret;\r\n  private jiraClientId = environment.jiraClientId;\r\n  private jiraOauthTokenUrl = environment.jiraOauthTokenUrl;\r\n  private jiraCloudIdUrl = environment.jiraCloudIdUrl;\r\n  private apiPath = environment.jiraApiEndpoint;\r\n  private authPath = environment.jiraApiAuth;\r\n  private apiAgilePath = environment.jiraApiAgile;\r\n  private user: IUser | undefined; // jirapi n'est pas vraiment un composant, donc le constuctor pas appeler donc comment init le user de manière globale\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService) {\r\n    // pas appeler\r\n  }\r\n\r\n  async postCodeToGetAccessToken(code: string): Promise<Issue> {\r\n    this.user = await this.authService.getSotrageUser();\r\n\r\n    const headerDict = {\r\n      Accept: 'application/json',\r\n    };\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headerDict),\r\n    };\r\n    let body = {\r\n      grant_type: 'authorization_code',\r\n      client_id: this.jiraClientId,\r\n      client_secret: this.jiraClientSecret,\r\n      code: code,\r\n      redirect_uri: this.jiraCallback,\r\n    };\r\n\r\n    return lastValueFrom(\r\n      this.http.post<Issue>(this.jiraOauthTokenUrl, body, requestOptions).pipe(map((data) => data))\r\n    );\r\n  }\r\n\r\n  getCloudId(code: string): Promise<any> {\r\n    const headerDict = {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${code}`,\r\n    };\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headerDict),\r\n    };\r\n\r\n    return lastValueFrom(\r\n      this.http.get<any[]>(this.jiraCloudIdUrl, requestOptions).pipe(\r\n        tap((_) => console.log('fetched cloudId')),\r\n        map((data) => data)\r\n      )\r\n    );\r\n  }\r\n\r\n  async getMySelf(): Promise<any> {\r\n    let token = await this.authService.getToken();\r\n\r\n    const headerDict = {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headerDict),\r\n    };\r\n\r\n    return lastValueFrom(\r\n      this.http.get<any[]>(this.apiPath + 'myself', requestOptions).pipe(\r\n        tap((_) => console.log('fetched myself')),\r\n        map((data) => data)\r\n      )\r\n    );\r\n  }\r\n\r\n  \r\n\r\n  async getSprints(): Promise<{ values: Sprint[] }> {\r\n    let token = await this.authService.getToken();\r\n\r\n    const headerDict = {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headerDict),\r\n    };\r\n\r\n    return lastValueFrom(\r\n      this.http\r\n        .get<{ values: Sprint[] }>(\r\n          this.apiAgilePath + 'board/133/sprint?state=active,future',\r\n          requestOptions\r\n        )\r\n        .pipe(\r\n          tap((_) => console.log('fetched sprint')),\r\n          map((data) => data)\r\n        )\r\n    );\r\n  }\r\n\r\n  async getProject(projectKey: string): Promise<Project> {\r\n    let token = await this.authService.getToken();\r\n\r\n    const headerDict = {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headerDict),\r\n    };\r\n\r\n    return lastValueFrom(\r\n      this.http.get<any>(this.apiPath + 'project/' + projectKey, requestOptions).pipe(\r\n        tap((_) => console.log('fetched project')),\r\n        map((data) => data)\r\n      )\r\n    );\r\n  }\r\n\r\n  async getProjects(): Promise<Project[]> {\r\n    let token = await this.authService.getToken();\r\n\r\n    const headerDict = {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headerDict),\r\n    };\r\n\r\n    return lastValueFrom(\r\n      this.http.get<any>(this.apiPath + 'project/', requestOptions).pipe(\r\n        tap((_) => console.log('fetched projects')),\r\n        map((data) => data)\r\n      )\r\n    );\r\n  }\r\n\r\n  async getComponent(id: string): Promise<Component & { archived: boolean }> {\r\n    let token = await this.authService.getToken();\r\n\r\n    const headerDict = {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headerDict),\r\n    };\r\n\r\n    return lastValueFrom(\r\n      this.http.get<any>(this.apiPath + 'component/' + id, requestOptions).pipe(\r\n        tap((_) => console.log('fetched component')),\r\n        map((data) => data)\r\n      )\r\n    );\r\n  }\r\n\r\n  async getMaj(projectId: string): Promise<Observable<Project[]>> {\r\n    let token = await this.authService.getToken();\r\n\r\n    const headerDict = {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headerDict),\r\n    };\r\n\r\n    return this.http.get<any[]>(this.apiPath + 'project/' + projectId, requestOptions).pipe(\r\n      tap((_) => console.log('fetched project')),\r\n      map((data) => data)\r\n    );\r\n  }\r\n\r\n  async searchJQL(query: string): Promise<({ [key: string]: any; } | Issue)[]> {\r\n    let jql = query;\r\n\r\n    let token = await this.authService.getToken();\r\n\r\n    const headerDict = {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headerDict),\r\n    };\r\n\r\n    let issues = [];\r\n\r\n    let fetchMoreResult: boolean = true;\r\n    let currentIndex: number = 0;\r\n\r\n    while (fetchMoreResult) {\r\n      const res = await lastValueFrom(\r\n        this.http\r\n          .get<any>(this.apiPath + 'search?jql=' + jql + '&startAt='+currentIndex, requestOptions)\r\n          .pipe(\r\n            tap(),\r\n            map((data) => data)\r\n          )\r\n      );\r\n      issues.push(...res.issues);\r\n      currentIndex += res.issues.length;\r\n      fetchMoreResult = res.total > currentIndex;\r\n    }\r\n\r\n    return issues;\r\n\r\n  }\r\n\r\n  async postIssue(issue): Promise<Issue> {\r\n    let token = await this.authService.getToken();\r\n\r\n    const headerDict = {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headerDict),\r\n    };\r\n\r\n    return lastValueFrom(\r\n      this.http.post<Issue>(this.apiPath + 'issue', issue, requestOptions).pipe(\r\n        // tap(_ => console.log('posted maj')),\r\n        map((data) => data)\r\n      )\r\n    );\r\n  }\r\n\r\n  async putIssue(issueKey: string, body: any): Promise<Issue> {\r\n    let token = await this.authService.getToken();\r\n\r\n    const headerDict = {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headerDict),\r\n    };\r\n\r\n    // {\r\n    //   fields: {\r\n    //     duedate :  duedate : endOfDay(this.dateSelected),\r\n    //   }\r\n    // }\r\n\r\n    return lastValueFrom(\r\n      this.http.put<Issue>(this.apiPath + 'issue/' + issueKey, body, requestOptions).pipe(\r\n        // tap(_ => console.log('posted maj')),\r\n        map((data) => data)\r\n      )\r\n    );\r\n  }\r\n\r\n  async postIssueTransition(issueKey: string, transitionId: string): Promise<Issue> {\r\n    let token = await this.authService.getToken();\r\n\r\n    const headerDict = {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headerDict),\r\n    };\r\n\r\n    return lastValueFrom(\r\n      this.http\r\n        .post<Issue>(\r\n          this.apiPath + 'issue/' + issueKey + '/transitions',\r\n          { transition: { id: transitionId } },\r\n          requestOptions\r\n        )\r\n        .pipe(\r\n          // tap(_ => console.log('posted maj')),\r\n          map((data) => data)\r\n        )\r\n    );\r\n  }\r\n  async getIssue(issueIdOrKey): Promise<Issue> {\r\n    let token = await this.authService.getToken();\r\n\r\n    const headerDict = {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headerDict),\r\n    };\r\n\r\n    return lastValueFrom(\r\n      this.http.get<Issue>(this.apiPath + 'issue/' + issueIdOrKey, requestOptions).pipe(\r\n        // tap(_ => console.log('posted maj')),\r\n        map((data) => data)\r\n      )\r\n    );\r\n  }\r\n\r\n  async getIssueTransition(issueIdOrKey): Promise<any> {\r\n    let token = await this.authService.getToken();\r\n\r\n    const headerDict = {\r\n      Accept: 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    };\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headerDict),\r\n    };\r\n\r\n    return lastValueFrom(\r\n      this.http\r\n        .get<any>(this.apiPath + 'issue/' + issueIdOrKey + '/transitions', requestOptions)\r\n        .pipe(\r\n          // tap(_ => console.log('posted maj')),\r\n          map((data) => data)\r\n        )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { CalendarEvent } from 'angular-calendar';\r\nimport { lastValueFrom, map, Observable, of, tap } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport IInstance from '../interfaces/instance';\r\nimport IProject from '../interfaces/project';\r\nimport IServer from '../interfaces/server';\r\nimport IUpdate from '../interfaces/update';\r\nimport { AuthService } from '../services/authService.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProjectxApi {\r\n  private path = environment.projectxApiEndpoint;\r\n  // headers: {secret : this.auth.getUser()?.secret }}\r\n  public secret!: any;\r\n\r\n  constructor(public http: HttpClient, private auth: AuthService) {\r\n    this.setSecret();\r\n  }\r\n\r\n  async setSecret() {\r\n    let user = await this.auth.getSotrageUser();\r\n    this.secret = user.secret;\r\n  }\r\n\r\n  getProjects(onlyWithInstances: boolean): Observable<IProject[]> {\r\n    return this.http\r\n      .get<IProject[]>(this.path + 'projects', {\r\n        params: { onlyWithInstances: onlyWithInstances },\r\n        headers: { secret: this.secret },\r\n      })\r\n      .pipe(\r\n        tap((_) => console.log('fetched projects')),\r\n        map((data) => data)\r\n      );\r\n  }\r\n\r\n  getProjectsInstances(): Promise<any[]> {\r\n    return lastValueFrom(\r\n      this.http\r\n        .get<any[]>(this.path + 'servers/instances', { headers: { secret: this.secret } })\r\n        .pipe(\r\n          tap((_) => console.log('fetched servers')),\r\n          map((data) => data)\r\n        )\r\n    );\r\n  }\r\n\r\n  getServers(): Observable<IServer[]> {\r\n    return this.http\r\n      .get<IServer[]>(this.path + 'servers', { headers: { secret: this.secret } })\r\n      .pipe(\r\n        tap((_) => console.log('fetched servers')),\r\n        map((data) => data)\r\n      );\r\n  }\r\n\r\n  postServer(server: IServer): Observable<IServer> {\r\n    return this.http\r\n      .post<IServer>(this.path + 'servers', server, { headers: { secret: this.secret } })\r\n      .pipe(\r\n        tap((_) => console.log('post server')),\r\n        map((data) => data)\r\n      );\r\n  }\r\n\r\n  postInstance(instance: IInstance[]): Promise<IInstance> {\r\n    return lastValueFrom(\r\n      this.http\r\n        .post<IInstance>(this.path + 'instances', instance, { headers: { secret: this.secret } })\r\n        .pipe(\r\n          tap((_) => console.log('post instance')),\r\n          map((data) => data)\r\n        )\r\n    );\r\n  }\r\n\r\n  patchInstance(instance: IInstance): Promise<IInstance> {\r\n    return lastValueFrom(\r\n      this.http\r\n        .patch<IInstance>(this.path + 'instances/' + instance.id, instance, {\r\n          headers: { secret: this.secret },\r\n        })\r\n        .pipe(\r\n          tap((_) => console.log('patch instance')),\r\n          map((data) => data)\r\n        )\r\n    );\r\n  }\r\n\r\n  patchInstanceEmails(instance: IInstance, mails: string[]): Promise<IInstance> {\r\n    return lastValueFrom(\r\n      this.http\r\n        .patch<IInstance>(this.path + 'instances/' + instance.id + '/mails', mails, {\r\n          headers: { secret: this.secret },\r\n        })\r\n        .pipe(\r\n          tap((_) => console.log('patch mail instance')),\r\n          map((data) => data)\r\n        )\r\n    );\r\n  }\r\n\r\n  deleteInstance(instance: IInstance): Promise<IInstance> {\r\n    return lastValueFrom(\r\n      this.http\r\n        .delete<IInstance>(this.path + 'instances/' + instance.id, {\r\n          headers: { secret: this.secret },\r\n        })\r\n        .pipe(\r\n          tap((_) => console.log('delete instance')),\r\n          map((data) => data)\r\n        )\r\n    );\r\n  }\r\n\r\n  async patchUpdate(update: IUpdate, body: any): Promise<IUpdate> {\r\n    return lastValueFrom(\r\n      this.http\r\n        .patch<IUpdate>(this.path + 'updates/' + update.id, body, {\r\n          headers: { secret: this.secret },\r\n        })\r\n        .pipe(\r\n          tap((_) => console.log('patch updates')),\r\n          map((data) => data)\r\n        )\r\n    );\r\n  }\r\n\r\n  async postUpdate(update: IUpdate): Promise<IUpdate> {\r\n    return lastValueFrom(\r\n      this.http\r\n        .post<IUpdate>(this.path + 'updates', update, { headers: { secret: this.secret } })\r\n        .pipe(\r\n          tap((_) => console.log('post updates')),\r\n          map((data) => data)\r\n        )\r\n    );\r\n  }\r\n\r\n  async deleteUpdate(update: IUpdate): Promise<IUpdate> {\r\n    return lastValueFrom(\r\n      this.http\r\n        .delete<IUpdate>(this.path + 'updates/' + update.id, { headers: { secret: this.secret } })\r\n        .pipe(\r\n          tap((_) => console.log('delete updates')),\r\n          map((data) => data)\r\n        )\r\n    );\r\n  }\r\n\r\n  getUpdates(): Observable<IUpdate[]> {\r\n    return this.http\r\n      .get<IUpdate[]>(this.path + 'updates', { headers: { secret: this.secret } })\r\n      .pipe(\r\n        tap((_) => console.log('fetched updates')),\r\n        map((data) => data)\r\n      );\r\n  }\r\n\r\n  getNextsUpdates(instanceId): Observable<{\r\n    lastUpdatesInstance: IUpdate[];\r\n    updatesInstance: IUpdate[];\r\n    updatesServer: IUpdate[];\r\n  }> {\r\n    // je sais pas comment passer proprement le queryparam\r\n    // const opts = { params: new HttpParams({ fromString: `instanceId=${instanceId}` }) };\r\n    return this.http\r\n      .get<{\r\n        lastUpdatesInstance: IUpdate[];\r\n        updatesInstance: IUpdate[];\r\n        updatesServer: IUpdate[];\r\n      }>(this.path + `updates/nexts?instanceId=${instanceId}`, {\r\n        headers: { secret: this.secret },\r\n      })\r\n      .pipe(\r\n        tap((_) => console.log('fetched updates')),\r\n        map((data) => data)\r\n      );\r\n  }\r\n  getJiraProject(): Promise<any> {\r\n    return lastValueFrom(\r\n      this.http\r\n        .get<any>(this.path + '/projects/utils/getJira', { headers: { secret: this.secret } })\r\n        .pipe(\r\n          tap((_) => console.log('fetched project')),\r\n          map((data) => data)\r\n        )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ManagerComponent } from './components/manager/manager.component';\r\nimport { CallbackComponent } from './components/oauth/callback/callback.component';\r\nimport { ProjectsListComponent } from './components/projects-list/projects-list.component';\r\nimport { SprintBoardComponent } from './components/sprint-board/sprint-board.component';\r\nimport { isLoginGuard } from './guards/isLoginGuard';\r\nimport { IsPermission } from './guards/isPermissionGuard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,    \r\n    canActivate: [isLoginGuard],\r\n  },\r\n\r\n  {\r\n    path: 'sprints',\r\n    component: SprintBoardComponent,\r\n    canActivate: [isLoginGuard],\r\n  },\r\n  {\r\n    path: 'projects',\r\n    component: ProjectsListComponent,\r\n    canActivate: [isLoginGuard],\r\n \r\n  },\r\n  {\r\n    path: 'manager',\r\n    component: ManagerComponent,\r\n    canActivate: [isLoginGuard],\r\n\r\n  },\r\n  {\r\n    path: 'callback',\r\n    component: CallbackComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    component: LoginComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { format } from 'date-fns';\r\nimport { fr } from 'date-fns/locale';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n\r\n  public now:string = format(new Date(),\"dd MMMM yyyy - HH' h 'mm' m 'ss' s\",{ locale: fr });\r\n\r\n  constructor(private router: Router) {\r\n\r\n    setInterval(() => {\r\n      this.now = format(new Date(),\"dd MMMM yyyy - HH' h 'mm' m 'ss' s\",{ locale: fr });\r\n    }, 1000);\r\n\r\n    this.inactivityTime();\r\n\r\n  }\r\n\r\n\r\ninactivityTime() {\r\n    var time;\r\n    window.onload = resetTimer;\r\n    // DOM Events\r\n    document.onmousemove = resetTimer;\r\n    document.onkeydown = resetTimer;\r\n\r\n    function logout() {\r\n      alert(\"Session timeout (50min) - Page reloading\")\r\n        window.location.reload();\r\n        //location.href = 'logout.html'\r\n    }\r\n\r\n    function resetTimer() {\r\n        clearTimeout(time);\r\n        time = setTimeout(logout, 3000000) // 50min\r\n        // 1000 milliseconds = 1 second\r\n    }\r\n};\r\n\r\n\r\n}\r\n","<nav style=\"position: absolute; left: 1%; top:1%;\">\r\n  <div class=\"mb-4\" style=\"color: white; font-size:20px\">\r\n      {{this.now}}\r\n      <div class=\"fs-6\">Powered by FlorentPlomb 🚀</div>\r\n  </div>\r\n  <!-- <a (click)=\"back();\">Back with Relative Routing</a> -->\r\n</nav>\r\n<router-outlet>\r\n</router-outlet>\r\n","import { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ProjectsListComponent } from './components/projects-list/projects-list.component';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InstancesFilterPipe, ProjectsFilterPipe } from './pipes/filter.pipe';\r\nimport { CalendarComponent } from './components/calendar/calendar.component';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport localeFr from '@angular/common/locales/fr';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { LoginModule } from './components/login/login.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { UpdateComponent } from './components/update/update.component';\r\nimport { ManagerComponent } from './components/manager/manager.component';\r\nimport { NewServerComponent } from './components/new-server/new-server.component';\r\nimport { InstanceComponent } from './components/instance/instance.component';\r\nimport { SprintBoardComponent } from './components/sprint-board/sprint-board.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { InstanceItemComponent } from './components/projects-list/instance-item/instance-item.component';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport { CustomVirtualScrollDirective } from './directives/custom-virtual-scroll-strategy.directive';\r\nimport { CallbackComponent } from './components/oauth/callback/callback.component';\r\n\r\nregisterLocaleData(localeFr);\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProjectsListComponent,\r\n    InstancesFilterPipe,\r\n    ProjectsFilterPipe,\r\n    CalendarComponent,\r\n    UpdateComponent,\r\n    ManagerComponent,\r\n    NewServerComponent,\r\n    InstanceComponent,\r\n    SprintBoardComponent,\r\n    HomeComponent,\r\n    InstanceItemComponent,\r\n    CustomVirtualScrollDirective,\r\n    CallbackComponent,\r\n\r\n    ],\r\n  imports: [\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory,\r\n    }),\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    Ng2SearchPipeModule,\r\n    ReactiveFormsModule,\r\n    ScrollingModule,\r\n    FormsModule,\r\n    LoginModule,\r\n    ToastrModule.forRoot(),\r\n    NgbModule\r\n  ],\r\n  providers: [\r\n    { provide: LOCALE_ID, useValue: 'fr-FR' },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CalendarEvent, CalendarEventTimesChangedEvent, CalendarView, DAYS_OF_WEEK } from 'angular-calendar';\r\nimport { endOfDay, isSameDay, isSameMonth, startOfDay } from 'date-fns';\r\nimport { Subject } from 'rxjs';\r\nimport IUpdate from 'src/app/interfaces/update';\r\nimport { UpdatesService } from 'src/app/services/updates.service';\r\nimport { environment, jiraUrl } from 'src/environments/environment';\r\nimport { UpdateComponent } from '../update/update.component';\r\nimport sampleData from '../../../assets/sampleData/updatesSample.json';\r\n\r\n\r\nconst colors: any = { red: { primary: '#ad2121', secondary: '#FAE3E3', }, blue: { primary: '#1e90ff', secondary: '#D1E8FF', }, yellow: { primary: '#e3bc08', secondary: '#FDF1BA', }, };\r\n\r\n@Component({\r\n  selector: 'calendar-component',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['calendar.component.scss'],\r\n  templateUrl: 'calendar.component.html',\r\n})\r\nexport class CalendarComponent {\r\n\r\n  @Input() isModal = false; // pas utiliser?\r\n  @Input() eventEditable = true;\r\n\r\n  updates: IUpdate[] = [];\r\n  refresh: Subject<any> = new Subject();\r\n  events: CalendarEvent[] = [];\r\n  view: CalendarView = CalendarView.Month;\r\n\r\n  CalendarView = CalendarView;\r\n  days = CalendarView.Day;\r\n\r\n  viewDate: Date = new Date();\r\n\r\n\r\n  // Affiche le \"popup\" des events sous le jour\r\n  activeDayIsOpen: boolean = true;\r\n  locale: string = 'fr';\r\n  weekStartsOn: number = DAYS_OF_WEEK.MONDAY;\r\n  weekendDays: number[] = [DAYS_OF_WEEK.FRIDAY, DAYS_OF_WEEK.SATURDAY];\r\n\r\n  // ce qui permet d'envoyer le valeur au composant parent du calendar, dans update-modal par exemple\r\n  // on emit un event :this.dayClickedEvent.emit(date); et on peut le récupérer dans le parent comme ça\r\n  @Output() dayClickedEvent = new EventEmitter<Date>();\r\n\r\n  constructor(private updatesService: UpdatesService, private modalService: NgbModal) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    if(environment.demo) {\r\n      this.viewDate = new Date(\"2023-02-14\");\r\n     let updates = sampleData as unknown;\r\n      this.createEvent(sampleData)\r\n\r\n    } else {\r\n      this.getUpdates();\r\n    }\r\n  }\r\n\r\n\r\n  getUpdates(): void {\r\n    if(!environment.demo) {\r\n    this.events = [];\r\n    this.updatesService\r\n      .getUpdates()\r\n      .subscribe((data: any) => (\r\n        this.createEvent(data.updates)\r\n      ));\r\n    }\r\n  }\r\n\r\n  createEvent(updates: any[]) {\r\n    let actions = this.eventEditable ? [\r\n      {\r\n\r\n        label: '<i class=\"fas fa-fw fa-pencil-alt fs-5 text-info\"></i>',\r\n        onClick: ({ event }: { event: CalendarEvent }): void => {\r\n          this.handleEvent('editUpdate', event);\r\n        }\r\n      },\r\n      {\r\n        label: '<i class=\"fas fa-fw fa-trash-alt fs-5 text-danger\"></i>',\r\n        a11yLabel: 'Delete',\r\n        onClick: ({ event }: { event: CalendarEvent }): void => {\r\n          // this.events = this.events.filter((iEvent) => iEvent !== event);\r\n          this.handleEvent('deleteUpdate', event);\r\n        },\r\n      }\r\n    ] : [];\r\n\r\n    for (let u of updates) {\r\n      let event: CalendarEvent = {\r\n        start: startOfDay(new Date(u.dueDate)),\r\n        end: endOfDay(new Date(u.dueDate)),\r\n        title: `${u.instance.target.toUpperCase()} - ${u.keyJira} - serveur ${u.instance.server.number.toUpperCase()}`,\r\n        color: colors.red,\r\n        cssClass: 'text-10',\r\n        allDay: false,\r\n        meta: { update: u },\r\n        actions: actions\r\n      }\r\n      this.events.push(event)\r\n    }\r\n    this.refresh.next(CalendarComponent);\r\n  };\r\n\r\n\r\n\r\n\r\n  dayClicked({ date, events }: { date: Date; events: CalendarEvent[] }, event: any): void {\r\n\r\n\r\n    this.dayClickedEvent.emit(date);\r\n\r\n    if (isSameMonth(date, this.viewDate)) {\r\n      if (\r\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\r\n        events.length === 0\r\n      ) {\r\n        this.activeDayIsOpen = false;\r\n      } else {\r\n        this.activeDayIsOpen = true;\r\n      }\r\n      this.viewDate = date;\r\n    }\r\n  }\r\n\r\n  eventTimesChanged({\r\n    event,\r\n    newStart,\r\n    newEnd,\r\n  }: CalendarEventTimesChangedEvent): void {\r\n    this.events = this.events.map((iEvent) => {\r\n      if (iEvent === event) {\r\n        return {\r\n          ...event,\r\n          start: newStart,\r\n          end: newEnd,\r\n        };\r\n      }\r\n      return iEvent;\r\n    });\r\n    this.handleEvent('goJira', event);\r\n  }\r\n\r\n  handleEvent(action: string, event: CalendarEvent): void {\r\n    console.log(event.meta)\r\n    switch (action) {\r\n      case 'goJira':\r\n        if(environment.demo) {\r\n          window.open(\"http://www.florentplomb.ch\",'_blank');\r\n        }else {\r\n        window.open(jiraUrl + 'browse/' + event.meta.update.keyJira, '_blank');\r\n      }\r\n        break;\r\n      case 'editUpdate':\r\n        const updateEditModal = this.modalService.open(UpdateComponent, {\r\n          size: 'xl',\r\n          animation: true,\r\n        })\r\n\r\n        updateEditModal.componentInstance.instance = event.meta.update.instance;\r\n        updateEditModal.componentInstance.mode = \"patch\"\r\n\r\n       updateEditModal.componentInstance.update = event.meta.update;\r\n\r\n        updateEditModal.dismissed.subscribe(() => {\r\n             \r\n          this.getUpdates();\r\n        })\r\n        break;\r\n\r\n        case 'deleteUpdate':\r\n          const deleteUpdateModal = this.modalService.open(UpdateComponent, {\r\n            size: 'xl',\r\n            animation: true,\r\n          })\r\n\r\n          deleteUpdateModal.componentInstance.instance = event.meta.update.instance;\r\n\r\n          deleteUpdateModal.componentInstance.mode = \"delete\"\r\n\r\n         deleteUpdateModal.componentInstance.update = event.meta.update;\r\n\r\n          deleteUpdateModal.dismissed.subscribe(() => {\r\n            this.getUpdates();\r\n          })\r\n          break;\r\n\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  addEvent(): void {\r\n    this.events = [\r\n      ...this.events,\r\n      {\r\n        title: 'New event',\r\n        start: startOfDay(new Date()),\r\n        end: endOfDay(new Date()),\r\n        color: colors.red,\r\n        draggable: true,\r\n        resizable: {\r\n          beforeStart: true,\r\n          afterEnd: true,\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  deleteEvent(eventToDelete: CalendarEvent) {\r\n    this.events = this.events.filter((event) => event !== eventToDelete);\r\n  }\r\n\r\n  setView(view: CalendarView) {\r\n    this.view = view;\r\n  }\r\n\r\n  closeOpenMonthViewDay() {\r\n    this.activeDayIsOpen = false;\r\n  }\r\n}\r\n","<div class=\"row text-center\">\r\n    <div class=\"col-md-6 text-light pt-2\"   [ngClass]=\"{'text-dark': isModal}\">\r\n        <h3>{{ viewDate | calendarDate:(view + 'ViewTitle'):'fr' | titlecase }}</h3>\r\n    </div>\r\n    <div class=\"col-md-6\" >\r\n        <div class=\"btn-group\">\r\n            <div class=\"btn btn-primary\" mwlCalendarPreviousView [view]=\"view\" [(viewDate)]=\"viewDate\" (viewDateChange)=\"closeOpenMonthViewDay()\">\r\n                Previous\r\n            </div>\r\n            <div class=\"btn btn-outline-white text-light\"  mwlCalendarToday [(viewDate)]=\"viewDate\">\r\n                Today\r\n            </div>\r\n            <div class=\"btn btn-primary\" mwlCalendarNextView [view]=\"view\" [(viewDate)]=\"viewDate\" (viewDateChange)=\"closeOpenMonthViewDay()\">\r\n                Next\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- <div class=\"col-md-4\">\r\n        <div class=\"btn-group\">\r\n            <div class=\"btn btn-primary\" (click)=\"setView(CalendarView.Month)\" [class.active]=\"view === CalendarView.Month\">\r\n                Month\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n</div>\r\n<br />\r\n<div [ngSwitch]=\"view\">\r\n    <mwl-calendar-month-view  *ngSwitchCase=\"CalendarView.Month\"  [viewDate]=\"viewDate\" [locale]=\"locale\" [events]=\"events\" [refresh]=\"refresh\" [activeDayIsOpen]=\"activeDayIsOpen\"\r\n        (eventClicked)=\"handleEvent('goJira', $event.event)\"\r\n        (eventTimesChanged)=\"eventTimesChanged($event)\"\r\n        (dayClicked)=\"dayClicked($event.day, $event)\">\r\n    </mwl-calendar-month-view>\r\n\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor( private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  naviguateTo(menu:string) {\r\n\r\n    this.router.navigate([menu], {});\r\n\r\n  }\r\n}\r\n","<!-- 1st row verticaly centered text in the square columns -->\r\n<div class=\"text-center text-white mb-5 mt-5\">\r\n    <div class=\"col-lg-7 mx-auto\">\r\n        <h1 class=\"display-3\">ProjectX</h1>\r\n    </div>\r\n</div>\r\n<div class=\"main\">\r\n\r\n    <div class=\"square\" (click)=\"naviguateTo('projects')\">\r\n        <div class=\"content border\">\r\n            <div style=\"text-align: center;\" class=\"pt-responsive\">\r\n                <h2 class=\"trns-text\">Mises à jour</h2>\r\n                <div  class=\"icon\">📅</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"square\" (click)=\"naviguateTo('sprints')\">\r\n        <div class=\"content border\">\r\n            <div style=\"text-align: center;\" class=\"pt-responsive\">\r\n                <h2 class=\"trns-text\">Sprint Board</h2>\r\n                <div class=\"icon\">📊</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"square\" (click)=\"naviguateTo('manager')\">\r\n        <div class=\"content border\">\r\n            <div style=\"text-align: center;\" class=\"pt-responsive\">\r\n                <h2 class=\"trns-text\">Server Manager</h2>\r\n                <div class=\"icon\">🏭</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"square\">\r\n        <div class=\"content border\">\r\n            <div style=\"text-align: center;\" class=\"pt-responsive\">\r\n                <h2 class=\"trns-text\">...</h2>\r\n                <div class=\"icon\">🌠</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"square\">\r\n        <div class=\"content border\">\r\n            <div style=\"text-align: center;\" class=\"pt-responsive\">\r\n                <h2 class=\"trns-text\">...</h2>\r\n                <div class=\"icon\">🌠</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"square\">\r\n        <div class=\"content border\">\r\n            <div style=\"text-align: center;\" class=\"pt-responsive\">\r\n                <h2 class=\"trns-text\">...</h2>\r\n                <div class=\"icon\">🌠</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { format } from 'date-fns';\r\nimport { stringify } from 'querystring';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ProjectxApi } from 'src/app/api/projectxApi';\r\nimport IInstance from 'src/app/interfaces/instance';\r\nimport IProject from 'src/app/interfaces/project';\r\nimport IServer from 'src/app/interfaces/server';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\n\r\n@Component({\r\n  selector: 'app-instance',\r\n  templateUrl: './instance.component.html',\r\n  styleUrls: ['./instance.component.scss']\r\n})\r\nexport class InstanceComponent implements OnInit {\r\n\r\n  @Input()\r\n  public mode: 'create' | 'patch' | 'patch-mail' | 'delete' = 'create';\r\n\r\n  @Input()\r\n  public instance!: IInstance;\r\n\r\n  /** il faut absolument patcher les mail avec un autre endpoint ou le changement de server avec un autre endpoint */\r\n\r\n  //  // Mode: patch, update alreadyExist\r\n  //  public update: IUpdate;\r\n\r\n  projects: IProject[] = [];\r\n\r\n  // je dois créer des interfaces pour envoyé au serveur instance et server qui ne sont pas les modèles mais juste des dto d'envoie\r\n  // instance: any = {}\r\n  constructor(private fb: FormBuilder, private projectxApi: ProjectxApi,\r\n    private activeModal: NgbModal, private projectsService: ProjectsService) { }\r\n\r\n  @Input() public servers: IServer[] = [];\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.instance)\r\n    // faut que je fasse un autre modal avec un autre endpoint pour juste changer les mails d'une instance\r\n    // on a pas besoin des projets quand on change que les mails.\r\n\r\n    // je sui un peu fatigué faudrait refactor ici a\r\n\r\n    if(this.mode != \"patch-mail\"){\r\n      this.getProjects();\r\n      if (this.instance?.id) {\r\n      this.instanceForm.controls['key'].setValue(this.instance.project.key);\r\n      }\r\n    }\r\n    if (this.instance?.id) {\r\n      this.instanceForm.controls['target'].setValue(this.instance.target);\r\n      this.instanceForm.controls['type'].setValue(this.instance.type);\r\n      this.instanceForm.controls['erpProject'].setValue(this.instance.erpProject);\r\n      this.instanceForm.controls['serverNumber'].setValue(this.instance.server.number);\r\n      this.instanceForm.controls['emails'].setValue(this.instance.emails?.join(\";\"));\r\n    }\r\n\r\n  }\r\n\r\n  public instanceForm = this.fb.group({\r\n    target: [null, Validators.required],\r\n    type: [null, Validators.required],\r\n    erpProject: [null, Validators.required],\r\n    serverNumber: [null, Validators.required],\r\n    key: [null, Validators.required],\r\n    emails: []\r\n  });\r\n\r\n\r\n  async getProjects(): Promise<void> {\r\n    this.projectsService\r\n      .getProjects(false)\r\n      .subscribe((projects: IProject[]) => (this.projects = projects));\r\n  }\r\n\r\n\r\n  async onSubmit() {\r\n\r\n    switch (this.mode) {\r\n      case \"create\":\r\n        await this.createInstance();\r\n        break;\r\n\r\n      case \"patch\":\r\n        await this.patchInstance();\r\n        break;\r\n      case \"patch-mail\":\r\n        await this.patchInstanceEmails();\r\n        break;\r\n\r\n      // case \"delete\":\r\n      //   await this.deleteUpdate();\r\n      //   break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  async createInstance() {\r\n\r\n    try {\r\n      let instance = await this.projectxApi.postInstance([this.instanceForm.value])\r\n      this.instanceOK();\r\n    } catch (error) {\r\n      this.handleError(\"Create error\")\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  async patchInstance() {\r\n\r\n    let form = this.instanceForm.value;\r\n\r\n    let data: any = {};\r\n\r\n    data.emails = form.emails?.split(/[;,]+/)\r\n    data.id = this.instance.id\r\n    data.target = form.target\r\n    data.type = form.type\r\n    data.erpProject = form.erpProject\r\n    data.serverNumber = form.serverNumber\r\n    data.key = form.key\r\n\r\n    try {\r\n      let instance = await this.projectxApi.patchInstance(data)\r\n      this.instanceOK();\r\n    } catch (error) {\r\n      this.handleError(\"Update error\")\r\n    }\r\n\r\n  }\r\n\r\n  async patchInstanceEmails() {\r\n\r\n    let form = this.instanceForm.value;\r\n\r\n    try {\r\n      let instance = await this.projectxApi.patchInstanceEmails(this.instance, form.emails?.split(/[;,]+/))\r\n      this.instanceOK();\r\n    } catch (error) {\r\n      this.handleError(\"Update error\")\r\n    }\r\n\r\n  }\r\n\r\n  async deleteInstance() {\r\n    if (confirm(`êtes-vous sur de voulour supprimer l'instance ${this.instance.target}`)) {\r\n      await this.projectxApi.deleteInstance(this.instance)\r\n      this.instanceOK();\r\n    }\r\n\r\n  }\r\n\r\n  private instanceOK() {\r\n\r\n    this.activeModal.dismissAll(\"ok\")\r\n    // refresh server list\r\n\r\n  }\r\n\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\" style=\"padding: 2em 2em 2em 2em ;\">\r\n    <div class=\"flex-end\"*ngIf=\"this.mode === 'patch'\">\r\n      <button (click)=\"deleteInstance()\" type=\"button\" class=\"btn btn-danger\">Delete instance</button>\r\n    </div>\r\n    <div>\r\n      <form [formGroup]=\"instanceForm\" novalidate (ngSubmit)=\"onSubmit()\">\r\n\r\n        <div class=\"mb-3\" *ngIf=\"this.mode != 'patch-mail'\">\r\n          <label for=\"target\" class=\"form-label\">Target</label>\r\n          <input id=\"target\" type=\"text\" class=\"form-control\" formControlName=\"target\">\r\n        </div>\r\n\r\n        <div class=\"mb-3\" *ngIf=\"this.mode === 'patch-mail'\">\r\n          <label for=\"target\" class=\"form-label\">Target</label>\r\n          <input id=\"target\" type=\"text\" [attr.disabled]=\"true\" class=\"form-control\" formControlName=\"target\">\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"emails\" class=\"form-label\">Emails (use \",\" or \";\" as separator)</label>\r\n          <input id=\"emails\" placeholder=\"ex: john@doe.com;jane@doe@.com\" type=\"text\" class=\"form-control\"\r\n            formControlName=\"emails\">\r\n        </div>\r\n\r\n        <div *ngIf=\"this.mode != 'patch-mail'\">\r\n\r\n          <div class=\"mb-3\">\r\n            <label for=\"type\" class=\"form-label\">Type</label>\r\n            <select size=\"2\" class=\"form-control\" formControlName=\"type\" id=\"type\">\r\n              <option value=\"PROD\">PROD</option>\r\n              <option value=\"DEMO\">DEMO</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label for=\"erpProject\" class=\"form-label\">Application Type</label>\r\n            <select size=\"2\" class=\"form-control\" formControlName=\"erpProject\" id=\"erpProject\">\r\n              <option value=\"NUI\">NUI</option>\r\n              <option value=\"DYNA\">DYNA</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label for=\"serverNumber\" class=\"form-label\">Server</label>\r\n            <select size=\"5\" class=\"form-control\" formControlName=\"serverNumber\" id=\"serverNumber\">\r\n\r\n              <option *ngFor=\"let s of this.servers\" [value]=\"s.number\">{{s.number}}</option>\r\n\r\n            </select>\r\n          </div>\r\n\r\n          <div class=\"form-group\" class=\"mb-3\">\r\n            <label for=\"key\">Project</label>\r\n            <select size=\"5\" class=\"form-control\" formControlName=\"key\" id=\"key\">\r\n\r\n              <option *ngFor=\"let p of this.projects\" [value]=\"p.key\">{{p.name}}</option>\r\n\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"d-grid gap-2\" *ngIf=\"this.mode === 'create'\">\r\n          <button type=\"submit\" [disabled]=\"!instanceForm.valid\" class=\"btn btn-primary btn-block mb-3\">Create\r\n            instance</button>\r\n        </div>\r\n\r\n\r\n        <div class=\"d-grid gap-2\" *ngIf=\"this.mode === 'patch'\">\r\n          <button type=\"submit\" class=\"btn btn-primary btn-block mb-3\">Update instance</button>\r\n        </div>\r\n\r\n        <div class=\"d-grid gap-2\" *ngIf=\"this.mode === 'patch-mail'\">\r\n          <button type=\"submit\" class=\"btn btn-primary btn-block mb-3\">Update emails</button>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Issue } from 'jira.js/out/version2/models';\r\n// import { Issue } from 'jira.js/out/agile/models/issue';\r\n// import { Issue } from 'jira.js/out/agile/models';\r\n// import { Issue } from 'jira.js/out/agile';\r\n// import { Issue } from 'jira.js/out/agile/models';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { JiraApi } from 'src/app/api/jiraApi';\r\nimport IUser from 'src/app/interfaces/user';\r\nimport { AuthService } from 'src/app/services/authService.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  private jiraCallback =  environment.jiraCallback;\r\n  private jiraClientId =  environment.jiraClientId;\r\n  private jiraScope =  environment.jiraScope;\r\n  private jiraState =  environment.jiraState;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void { \r\n\r\n   if(environment.demo){\r\n    this.router.navigate(['projects']);\r\n\r\n   } else{\r\n   \r\n\r\n    let url:string = `https://auth.atlassian.com/authorize?audience=api.atlassian.com&client_id=${this.jiraClientId}&scope=${this.jiraScope}&redirect_uri=${this.jiraCallback}&state=${this.jiraState}&response_type=code&prompt=consent`\r\n    url = url.replace(this.jiraState, this.jiraState.split(\"\").map(e=>Math.floor(10*Math.random())).join(\"\"))\r\n\r\n    window.location.replace(url);\r\n   }\r\n  }\r\n\r\n  public loginForm = this.fb.group({\r\n    username: ['', Validators.required],\r\n    password: ['', Validators.required],\r\n  });\r\n\r\n /*  async getLogin(): Promise<void> {\r\n\r\n  \r\n    // 1. call getmyself to check if the user credentials are allowed in jira\r\n    // 2. call getsprint to set secret  for projectX auth Api\r\n    try {\r\n\r\n      let u = await this.jiraApi.getMySelf()\r\n\r\n      let user: IUser = {\r\n        name: u.name,\r\n        key: u.key,\r\n        displayName: u.displayName,\r\n        emailAddress: u.emailAddress\r\n      }\r\n\r\n      // await?\r\n      this.auth.setUser(user);\r\n\r\n      let issue: Issue = await this.jiraApi.getIssue(\"FLOR-7\");\r\n\r\n      await this.auth.setUserSecret(issue.fields.created);\r\n\r\n      this.router.navigate(['home'], {});\r\n    } catch (err) {\r\n\r\n      this.handleError(null);\r\n    }\r\n\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.getLogin();\r\n  }\r\n */\r\n\r\n  handleError(data: any) {\r\n    this.toastr.warning('Wrong user or password or server error', 'Login failed');\r\n    console.log('Loginfail:', data);\r\n  }\r\n}\r\n","<div class=\"text-center text-white mb-5 mt-4\">\r\n    <div class=\"col-lg-7 mx-auto\">\r\n        <h1 class=\"display-3\">ProjectX</h1>\r\n    </div>\r\n</div>\r\n<div class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n    \r\n            <div class=\"rounded-3 col-lg-4\" style=\"padding: 2em 2em 2em 2em; background-color: #fbfbfb33; height: 400px \">\r\n\r\n                 <div class=\"h-100 list-group-flush bg-white border\">\r\n                   \r\n                    <div class=\"login-container\">\r\n                        \r\n                        <div class=\"login-content p-4\">\r\n                            <div class=\"text-center display-10 mb-3\">Please login with your <b>JIRA </b>account</div>\r\n                      <!--           <form [formGroup]=\"loginForm\" novalidate (ngSubmit)=\"onSubmit()\" autocomplete=\"username\">\r\n                                    <mat-form-field>\r\n                                        <mat-icon matPrefix>person_outline</mat-icon>\r\n                                        <input autofocus type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n                                    </mat-form-field>\r\n\r\n                                    <mat-form-field>\r\n                                        <mat-icon matPrefix>lock_outline</mat-icon>\r\n                                        <input type=\"password\" autocomplete=\"false\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n                                    </mat-form-field>\r\n                                    <div class=\"d-grid gap-2\">\r\n                                        <button type=\"submit\" [disabled]=\"loginForm.invalid\" class=\"btn btn-primary\" >Login</button>\r\n                                      </div>\r\n              \r\n                                </form> -->\r\n                          \r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div> \r\n            \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"login-container\">\r\n    <div class=\"login-content\">\r\n        <mat-toolbar class=\"login-toolbar\" color=\"primary\">My App</mat-toolbar>\r\n        <mat-card>\r\n            <form [formGroup]=\"loginForm\" novalidate (ngSubmit)=\"onSubmit()\">\r\n                <mat-form-field>\r\n                    <mat-icon matPrefix>person_outline</mat-icon>\r\n                    <input autofocus type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n                </mat-form-field>\r\n\r\n                <mat-form-field>\r\n                    <mat-icon matPrefix>lock_outline</mat-icon>\r\n                    <input type=\"password\" autocomplete=\"false\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n                </mat-form-field>\r\n\r\n                <button type=\"submit\" mat-raised-button color=\"primary\">Login</button>\r\n            </form>\r\n        </mat-card>\r\n    </div>\r\n</div> -->","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar'\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatToolbarModule\r\n  ],\r\n  declarations: [LoginComponent],\r\n  exports: [LoginComponent]\r\n})\r\nexport class LoginModule { }\r\n","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ProjectxApi } from 'src/app/api/projectxApi';\r\nimport IInstance from 'src/app/interfaces/instance';\r\nimport IServer from 'src/app/interfaces/server';\r\nimport { ArrayUtilsService } from 'src/app/services/array-utils.service';\r\nimport { ServersService } from 'src/app/services/servers.service';\r\nimport { InstanceComponent } from '../instance/instance.component';\r\nimport { NewServerComponent } from '../new-server/new-server.component';\r\n\r\n@Component({\r\n  selector: 'app-manager',\r\n  templateUrl: './manager.component.html',\r\n  styleUrls: ['./manager.component.scss'],\r\n})\r\nexport class ManagerComponent implements OnInit {\r\n  servers: IServer[] = [];\r\n  selectedServer!: IServer;\r\n\r\n  instances: IInstance[] = [];\r\n\r\n  public searchText: any;\r\n\r\n  constructor(\r\n    private serversService: ServersService,\r\n    private toastr: ToastrService,\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    private projectxApi: ProjectxApi,\r\n    private arrayUtils: ArrayUtilsService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getServers();\r\n  }\r\n\r\n  async getServers() {\r\n    this.serversService\r\n      .getServers()\r\n      .subscribe(\r\n        (servers: IServer[]) => (\r\n          (this.servers = this.arrayUtils.sortAlpha(servers, 'number')),\r\n          this.displayInstance(this.servers[0])\r\n        )\r\n      );\r\n  }\r\n\r\n  createInstance() {\r\n    const modalRef = this.modalService.open(InstanceComponent, {\r\n      size: 'xl',\r\n      animation: true,\r\n    });\r\n\r\n    modalRef.componentInstance.servers = this.servers;\r\n\r\n    modalRef.dismissed.subscribe(() => {\r\n      this.getServers();\r\n    });\r\n  }\r\n\r\n  editInstance(instance: IInstance) {\r\n    const modalRef = this.modalService.open(InstanceComponent, {\r\n      size: 'xl',\r\n      animation: true,\r\n    });\r\n\r\n    modalRef.componentInstance.instance = instance;\r\n    modalRef.componentInstance.mode = 'patch';\r\n    modalRef.componentInstance.servers = this.servers;\r\n\r\n    modalRef.dismissed.subscribe((reason) => {\r\n      if (reason === 'ok') {\r\n        this.getServers();\r\n      }\r\n    });\r\n  }\r\n\r\n  createServer() {\r\n    const modalRef = this.modalService.open(NewServerComponent, {\r\n      size: 'xl',\r\n      animation: true,\r\n    });\r\n\r\n    modalRef.dismissed.subscribe((reason) => {\r\n      if (reason === 'ok') {\r\n        this.getServers();\r\n      }\r\n    });\r\n  }\r\n\r\n  async refreshProjects() {\r\n    try {\r\n      await this.projectxApi.getJiraProject();\r\n      this.toastr.success('Refresh done');\r\n    } catch (error) {\r\n      this.toastr.error('Refresh error: ' + error);\r\n    }\r\n  }\r\n\r\n  async getServersInstance() {\r\n    try {\r\n      let result = await this.projectxApi.getProjectsInstances();\r\n      navigator.clipboard.writeText(JSON.stringify(result)).then(\r\n        () => {\r\n          this.toastr.success('check you clipboard');\r\n        },\r\n        () => {\r\n          this.toastr.error('error');\r\n        }\r\n      );\r\n    } catch (error) {\r\n      this.toastr.error('Refresh error: ' + error);\r\n    }\r\n  }\r\n\r\n  displayInstance(server: IServer) {\r\n    this.selectedServer = server;\r\n    this.instances = server.instances;\r\n  }\r\n\r\n  openUrl(instance: IInstance): void {\r\n    window.open(instance.url, '_blank');\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['home']);\r\n  }\r\n}\r\n","<div class=\"text-center text-white mb-5 mt-4\">\r\n  <div class=\"col-lg-7 mx-auto\">\r\n    <h1 class=\"display-3\">Manager</h1>\r\n  </div>\r\n</div>\r\n<div class=\"fs-4 text-white\" style=\"cursor:pointer; position: absolute;top: 8%; padding-left: 1em;\">\r\n  <a (click)=\"back();\"> ◀ Back </a>\r\n</div>\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n\r\n    <div class=\"col-lg-6\">\r\n\r\n      <div class=\"rounded-3\" style=\"padding: 2em ; background-color: #fbfbfb33; height: 800px \">\r\n        <div class=\"flex-sb\">\r\n          <h2 class=\"text-light\">Servers</h2>\r\n          <button class=\"btn btn-primary btn-block mb-3\" (click)=\"createServer()\">+ Create server</button>\r\n        </div>\r\n        <!-- <input class=\"form-control fs-4 mb-1\" [(ngModel)]=\"searchText\" type=\"search\" placeholder=\"Search ERP instance\" aria-label=\"Search\"> -->\r\n        <div class=\"list-group-flush bg-white border\" style=\"overflow: hidden; overflow-y: scroll; height: 80%;\">\r\n\r\n          <div class=\"list-group-item\" [ngClass]=\"{'active' : server === selectedServer}\"\r\n            *ngFor=\"let server of servers\">\r\n\r\n            <div class=\"fs-5\" (click)=\"displayInstance(server)\">{{ server.name }} - n°{{ server.number }}</div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-6\">\r\n\r\n      <div class=\"rounded-3\" style=\"padding: 2em; background-color: #fbfbfb33; height: 800px \">\r\n\r\n        <div class=\"flex-sb\">\r\n          <h2 class=\"text-light\">Instances</h2>\r\n          <button class=\"btn btn-primary btn-block mb-3\" (click)=\"createInstance()\">+ Create instance</button>\r\n        </div>\r\n\r\n\r\n        <div class=\" list-group-flush bg-white border\" style=\"overflow: hidden; overflow-y: scroll; height: 80%;\">\r\n\r\n          <table class=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Project</th>\r\n                <th scope=\"col\">Target</th>\r\n                <th scope=\"col\">App</th>\r\n                <th scope=\"col\">Type</th>\r\n                <th scope=\"col\">-</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n              <tr *ngFor=\"let i of instances; let index = index\" class=\"table-info\">\r\n                <th scope=\"row\">{{index+1}}</th>\r\n                <td>{{i.project?.name}}</td>\r\n                <td class=\"flex\">{{ i.target }} <div class=\"text-coral ms-1\" (click)=\"openUrl(i)\"><i\r\n                      class=\"fas fa-external-link-alt\"></i> </div>\r\n                </td>\r\n                <td>{{ i.erpProject }} </td>\r\n                <td>{{ i.type }} </td>\r\n                <td (click)=\"editInstance(i)\"><i class=\"bi bi-pen\"></i>🖍</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-lg-6 mt-2\">\r\n\r\n      <div class=\"rounded-3\" style=\"padding: 2em; background-color: #fbfbfb33; height: 100px \">\r\n\r\n        <div class=\"flex-sb\">\r\n          <h2 class=\"text-light\">Projects from JIRA</h2>\r\n          <button class=\"btn btn-primary btn-block mb-3\" (click)=\"refreshProjects()\"> Synchronize projects from\r\n            JIRA</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-6 mt-2\">\r\n\r\n      <div class=\"rounded-3\" style=\"padding: 2em; background-color: #fbfbfb33; height: 100px \">\r\n\r\n        <div class=\"flex-sb\">\r\n          <h2 class=\"text-light\">Get instances (json) </h2>\r\n          <button class=\"btn btn-primary btn-block mb-3\" (click)=\"getServersInstance()\">Get instances update\r\n            date</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ProjectxApi } from 'src/app/api/projectxApi';\r\nimport IServer from 'src/app/interfaces/server';\r\n\r\n@Component({\r\n  selector: 'app-new-server',\r\n  templateUrl: './new-server.component.html',\r\n  styleUrls: ['./new-server.component.scss']\r\n})\r\nexport class NewServerComponent implements OnInit {\r\n\r\n  server!: IServer;\r\n\r\n  constructor(private fb: FormBuilder, private projectxApi: ProjectxApi, private activeModal: NgbModal) { }\r\n\r\n  public serverForm = this.fb.group({\r\n    number: ['', Validators.required],\r\n    ip: ['', Validators.required],\r\n    host: ['', Validators.required],\r\n    port: ['', Validators.required],\r\n    user: ['', Validators.required],\r\n    password: ['', Validators.required]\r\n  });\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  createServer() {\r\n    this.server = this.serverForm.value;\r\n\r\n    this.projectxApi.postServer(this.server).subscribe({\r\n      next: this.serverOK.bind(this),\r\n      error: this.handleError.bind(this),\r\n    });\r\n\r\n\r\n  }\r\n\r\n\r\n  private serverOK(server: IServer) {\r\n\r\n    this.activeModal.dismissAll(\"ok\")\r\n    // refresh server list\r\n\r\n  }\r\n\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${operation} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\" style=\"padding: 2em 2em 2em 2em ;\">\r\n        <div>\r\n            <form [formGroup]=\"serverForm\" novalidate (ngSubmit)=\"createServer()\">\r\n\r\n                <div class=\"mb-3\">\r\n                    <label for=\"number\" class=\"form-label\">Number</label>\r\n                    <input id=\"number\" type=\"number\" class=\"form-control\" formControlName=\"number\">\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                    <label for=\"ip\" class=\"form-label\">IP</label>\r\n                    <input id=\"ip\" type=\"text\" class=\"form-control\" formControlName=\"ip\">\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                    <label for=\"port\" class=\"form-label\">Port</label>\r\n                    <input id=\"port\" type=\"number\" class=\"form-control\" formControlName=\"port\">\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                    <label for=\"host\" class=\"form-label\">Host</label>\r\n                    <input id=\"host\" type=\"text\" class=\"form-control\" formControlName=\"host\">\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                    <label for=\"User\" class=\"form-label\">User</label>\r\n                    <input id=\"user\" type=\"text\" class=\"form-control\" formControlName=\"user\">\r\n                </div>\r\n\r\n                <div class=\"mb-3\">\r\n                    <label for=\"password\" class=\"form-label\">Password</label>\r\n                    <input id=\"password\" type=\"text\" class=\"form-control\" formControlName=\"password\">\r\n                </div>\r\n\r\n                <div class=\"d-grid gap-2\">\r\n                    <button type=\"submit\" [disabled]=\"!serverForm.valid\" class=\"btn btn-primary btn-block mb-3\">Create server</button>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { JiraApi } from 'src/app/api/jiraApi';\r\nimport IUser from 'src/app/interfaces/user';\r\nimport { AuthService } from 'src/app/services/authService.service';\r\nimport { Issue } from 'jira.js/out/version2/models';\r\n@Component({\r\n  selector: 'app-callback',\r\n  templateUrl: './callback.component.html',\r\n  styleUrls: ['./callback.component.scss']\r\n})\r\nexport class CallbackComponent implements OnInit {\r\n\r\n  code:string;\r\n\r\n  constructor( private route: ActivatedRoute, private jiraApi: JiraApi, private auth: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.route.queryParams.subscribe(async params => {\r\n      this.code = params['code'];\r\n\r\n      let reqAccessToken: any = await this.jiraApi.postCodeToGetAccessToken(this.code).catch(() => {\r\n       // this.router.navigate(['login'], {});\r\n        throw console.log(\"Access token error\", reqAccessToken)\r\n        });\r\n\r\n  let user: IUser = {\r\n    name: '',\r\n    key: '',\r\n    displayName: '',\r\n    emailAddress: '',\r\n    token: reqAccessToken.access_token\r\n  }\r\n\r\n  await this.auth.setUser(user);\r\n\r\n    // 1. call getmyself to check if the user credentials are allowed in jira\r\n    // 2. call getsprint to set secret  for projectX auth Api\r\n    try {\r\n\r\n      let u = await this.jiraApi.getMySelf()\r\n\r\n      let user: IUser = {\r\n        name: u.name,\r\n        key: u.key,\r\n        displayName: u.displayName,\r\n        emailAddress: u.emailAddress,\r\n        token: reqAccessToken.access_token\r\n      }\r\n\r\n      // await?\r\n      this.auth.setUser(user);\r\n\r\n      let issue: Issue = await this.jiraApi.getIssue(\"FLOR-7\");\r\n\r\n      await this.auth.setUserSecret(issue.fields.created);\r\n  \r\n  \r\n        this.router.navigate(['projects'], {});\r\n      } catch (err) {\r\n      //  this.router.navigate(['login'], {});\r\n        console.log(\"ERROR\")\r\n      }\r\n      \r\n \r\n  \r\n    //  console.log(reqAccessToken);\r\n\r\n    /*   let reqCloudId = await this.jiraApi.getCloudId(reqAccessToken.access_token);\r\n      console.log(reqCloudId) */\r\n\r\n\r\n   /*   let u = await this.jiraApi.getMySelf(reqAccessToken.access_token)\r\n     console.log(u) */\r\n\r\n    \r\n    });\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<p>callback works!</p>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport IInstance from 'src/app/interfaces/instance';\r\nimport { UpdateComponent } from '../../update/update.component';\r\nimport { InstanceComponent } from '../../instance/instance.component';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport IProject from 'src/app/interfaces/project';\r\nimport { format } from 'date-fns';\r\nimport { fr } from 'date-fns/locale';\r\n\r\n\r\n@Component({\r\n  selector: 'app-instance-item',\r\n  templateUrl: './instance-item.component.html',\r\n  styleUrls: ['./instance-item.component.scss']\r\n})\r\nexport class InstanceItemComponent implements OnInit {\r\n\r\n  @Output() refreshProjects = new EventEmitter();\r\n  @Output() refreshCalendar = new EventEmitter();\r\n\r\n  @Input() instance: IInstance;\r\n  @Input() project: IProject;\r\n\r\n  constructor(    private modalService: NgbModal) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openInstance(instance: IInstance): void {\r\n    window.open(instance.url, '_blank');\r\n  }\r\n\r\n  getLastUpdate() {\r\n    // appel 150'00 fois le console log voir pk\r\n    let date = this.instance.lastUpdate[0]?.dueDate\r\n    console.log(date)\r\n    if(date){\r\n      return date\r\n      // return format(this.instance.lastUpdate[0]?.dueDate, 'dd MMM yyyy', { locale: fr })\r\n    }\r\n    return \"\";\r\n\r\n\r\n  }\r\n\r\n\r\n  openMAJModal(project: IProject, instance: IInstance) {\r\n\r\n    const modalRef = this.modalService.open(UpdateComponent, {\r\n      size: 'xl',\r\n      animation: true,\r\n    })\r\n\r\n    modalRef.componentInstance.instance = instance;\r\n    modalRef.componentInstance.project = project;\r\n\r\n    modalRef.dismissed.subscribe(() => {\r\n      this.refreshCalendar.emit();\r\n    })\r\n\r\n\r\n\r\n  }\r\n\r\n  editEmails(instance: IInstance) {\r\n\r\n    const modalRef = this.modalService.open(InstanceComponent, {\r\n      size: 'xl',\r\n      animation: true,\r\n    })\r\n\r\n    modalRef.componentInstance.instance = instance;\r\n    modalRef.componentInstance.mode = 'patch-mail';\r\n\r\n    modalRef.dismissed.subscribe((reason:any) => {\r\n      if(reason === 'ok'){\r\n        this.refreshProjects.emit();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","     <div class=\"row\">\r\n        <div class=\"col-6\" (click)=\"openInstance(instance)\"> {{ instance.target }}</div>\r\n\r\n        <div class=\"col-3 text-coral\">\r\n          <span class=\"fs-5\" (click)=\"editEmails(instance)\">📧</span>\r\n          <span (click)=\"openInstance(instance)\">\r\n            s{{ instance.server.number }} <i class=\"fas fa-external-link-alt\"></i>\r\n          </span>\r\n        </div>\r\n        <div class=\"col-3 text-end\">\r\n            <span *ngIf=\"instance.server.config?.updateAfter\">⏰</span>\r\n            <button type=\"button\" style=\"background-color: #2e4fbb; margin-bottom: 1px;\" class=\"btn  btn-sm text-white\" (click)=\"openMAJModal(project, instance)\"><small>M.A.J</small></button>\r\n        </div>\r\n\r\n    </div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport {\r\n  NgbModal,\r\n  NgbModalOptions\r\n} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { environment, jiraUrl } from 'src/environments/environment';\r\nimport IProject from 'src/app/interfaces/project';\r\nimport IUser from 'src/app/interfaces/user';\r\nimport { AuthService } from 'src/app/services/authService.service';\r\nimport { ProjectsService } from 'src/app/services/projects.service';\r\nimport { CalendarComponent } from '../calendar/calendar.component';\r\nimport { ArrayUtilsService } from 'src/app/services/array-utils.service';\r\nimport { Router } from '@angular/router';\r\nimport sampleData from '../../../assets/sampleData/projectsSample.json';\r\n\r\n\r\n@Component({\r\n  selector: 'app-projects-list',\r\n  templateUrl: './projects-list.component.html',\r\n  styleUrls: ['./projects-list.component.scss'],\r\n})\r\nexport class ProjectsListComponent implements OnInit {\r\n\r\n  @ViewChild(CalendarComponent) childCalendarComp!: CalendarComponent;\r\n\r\n  user!: IUser;\r\n  projects: IProject[] = [];\r\n  public searchText: any;\r\n  public instanceCounter: number;\r\n  public itemHeights:number[] = [];\r\n\r\n  closeResult: string | undefined;\r\n  modalOptions: NgbModalOptions | undefined;\r\n\r\n  constructor(\r\n    private projectsService: ProjectsService,\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private arrayUtils: ArrayUtilsService\r\n  ) {\r\n    this.modalOptions = {\r\n      backdrop: 'static',\r\n      backdropClass: 'customBackdrop',\r\n    };\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    if(environment.demo) {\r\n\r\n    this.projects = sampleData as unknown as IProject[];\r\n  \r\n    this.computeHeights(),\r\n    this.computeInstance()\r\n     \r\n  } else {\r\n    this.auth.getSotrageUser().then((user) => {\r\n      this.user = user;\r\n    });\r\n\r\n\r\n    this.getProjects();\r\n  }\r\n\r\n\r\n  }\r\n\r\n  refreshData() {\r\n\r\n    this.getProjects();\r\n    this.childCalendarComp.getUpdates();\r\n\r\n  }\r\n\r\n  openProject(projectKey: string): void {\r\n    let url = jiraUrl + 'projects/' + projectKey\r\n    window.open(url, '_blank');\r\n  }\r\n\r\n  async getProjects(): Promise<void> {\r\n    this.projectsService\r\n      .getProjects(true)\r\n      .subscribe((projects: IProject[]) => (\r\n        this.projects = this.arrayUtils.sortAlpha(projects,\"name\"),\r\n        this.computeHeights(),\r\n        this.computeInstance()\r\n\r\n      ));\r\n  }\r\n\r\n  computeHeights() {\r\n    let base = 55;\r\n  this.itemHeights = this.projects.map(p => {\r\n     p.instances.length\r\n\r\n     return base + (p.instances.length*32);\r\n   })\r\n\r\n  }\r\n\r\n\r\n  back() {\r\n    this.router.navigate([\"home\"]);\r\n  }\r\n\r\n\r\n  computeInstance() {\r\n    this.instanceCounter = 0;\r\n    for (let p of this.projects) {\r\n      this.instanceCounter += p.instances.length;\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div *ngIf=\"user\" class=\"p-3 text-light\" style=\"text-align: right;\">Welcome {{user.displayName}}</div>\r\n<div class=\"text-center text-white mb-5 mt-4\">\r\n  <div class=\"col-lg-7 mx-auto\">\r\n    <h1 class=\"display-3\">ProjectX</h1>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"fs-4 text-white\" style=\"cursor:pointer; position: absolute;top: 8%; padding-left: 1em;\">\r\n  <a (click)=\"back();\"> ◀ Back </a>\r\n</div>\r\n\r\n\r\n<div class=\"container\">\r\n  <div style=\"text-align: right;\">\r\n    <button (click)=\"this.refreshData()\" class=\"btn btn-primary fs-5 mb-2\">Refresh 🔄</button>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-xl\">\r\n      <div class=\"rounded-3\" style=\"padding: 2em; background-color: #fbfbfb33; height: 800px \">\r\n        <div class=\"text-white ml-1\">{{instanceCounter}} ERP</div>\r\n        <input class=\"form-control fs-4 mb-1\" [(ngModel)]=\"searchText\" type=\"search\" placeholder=\"Search ERP instance\"\r\n          aria-label=\"Search\">\r\n          \r\n          <cdk-virtual-scroll-viewport  customVirtualScrollStrategy [itemHeights]='itemHeights' class=\"list-group-flush bg-white border\" style=\"padding: 1em; overflow: hidden; overflow-y: scroll; height: 90%;\">\r\n            <div style=\"padding: 1em\">\r\n\r\n          \r\n            <div class=\"list-group-item\"  *cdkVirtualFor=\"let project of projects | projectsFilterPipe:searchText\">\r\n\r\n              <div class=\"fs-4\" style=\"cursor:pointer\" (click)=\"openProject(project.key)\">{{ project.name }} - {{\r\n                project.key }} <small>{{project.instances.length}}</small></div>\r\n           \r\n              <div *ngFor=\"let instance of project.instances | instancesFilterPipe:searchText \" class=\"container\"\r\n                style=\"cursor:pointer;margin-left: 10px;\" >\r\n                <app-instance-item [instance]=\"instance\" [project]=\"project\" (refreshProjects)=\"this.getProjects()\"\r\n                  (refreshCalendar)=\"this.childCalendarComp.getUpdates()\"></app-instance-item>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          </cdk-virtual-scroll-viewport>\r\n\r\n\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"col-xl\">\r\n      <div class=\"rounded-3\" style=\"padding: 2em; background-color: #fbfbfb33; height: 800px \">\r\n        <div class=\"h-100\">\r\n          <calendar-component></calendar-component>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { saveAs } from 'file-saver';\r\nimport { Sprint } from 'jira.js/out/agile/models';\r\nimport { JiraApi } from 'src/app/api/jiraApi';\r\nimport { DateService } from 'src/app/services/date.service';\r\nimport { jiraUrl } from 'src/environments/environment';\r\nimport { TicketTab } from './TicketTab.interface';\r\nimport { Router } from '@angular/router';\r\nimport { Project, Component as Composant } from 'jira.js/out/version2/models';\r\n\r\n@Component({\r\n  selector: 'app-sprint-board',\r\n  templateUrl: './sprint-board.component.html',\r\n  styleUrls: ['./sprint-board.component.scss'],\r\n})\r\nexport class SprintBoardComponent implements OnInit {\r\n  public spReporter: { name: string; sp: number }[] = [];\r\n  public spPerAC: { name: string; sp: number; issues: any[] }[] = [];\r\n  public spProject: {\r\n    name: string;\r\n    sp: number;\r\n    tdev: number;\r\n    ttest: number;\r\n    treview: number;\r\n    tdevtot: number;\r\n    issues: { key: string; sp: number }[];\r\n    issueList: string;\r\n  }[] = [];\r\n  public majProject: { project: string; total: number }[] = [];\r\n  public issuesType: { type: string; sp: number; devTot: number }[] = [];\r\n  public sprints: Sprint[] = [];\r\n  public sprintSelected: any;\r\n  public useOwnJql: boolean = false;\r\n\r\n  public jqlSPbyProjectAC: string;\r\n\r\n  public loadProjects: boolean;\r\n\r\n  public tabs: TicketTab[];\r\n\r\n  constructor(private jiraApi: JiraApi, private router: Router, private dateService: DateService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    let data = await this.jiraApi.getSprints();\r\n\r\n    if (data.values) {\r\n      this.sprints = data.values;\r\n    }\r\n\r\n    let index = this.dateService.getActiveSprint(this.sprints);\r\n    this.dateService.sortByDate(this.sprints, 'startDate');\r\n\r\n    this.sprintSelected = this.sprints[index];\r\n\r\n    this.tabs = [\r\n      {\r\n        name: 'SPbyProjectAC',\r\n        jql: `AND project in (ACFIN, ACGEN, ACCOM, ACPROD, ACPRO, ACIT, ACSAL, ACTIM, AC, AUB, AUUI, \"AC Gestion Projet\") AND issuetype in (Amélioration, Bug, Estimation, \"Incident ERP\", \"Incident IT\", \"Nouvelle fonction\", \"Nouvelle installation\", Story, \"Récit/Séance\", Support,  Tâche, \"Tâche IT\", \"Tâche client\", Épopée) AND component not in (ScrumMaster, \"Réserve globale du Sprint\", Mentoring, \"Séances d'estimation\", \"Séance Interne\")`,\r\n      },\r\n    ];\r\n\r\n    this.onSprintChange();\r\n  }\r\n\r\n  onSprintChange() {\r\n    this.spPerReporter(this.sprintSelected);\r\n    this.spPerProject(this.sprintSelected);\r\n    this.majPerProject(this.sprintSelected);\r\n    this.issuePerType(this.sprintSelected);\r\n    this.spPerAmeliorationContinue(this.sprintSelected);\r\n  }\r\n\r\n  async spPerReporter(sprint: Sprint) {\r\n    let jql = `sprint=${sprint.id} AND component not in (\"Réserve globale du Sprint\") AND status != Clôturé AND status != Annulé AND issuetype not in (\"Mise à jour App PROD\", \"Mise à jour DEMO\")`;\r\n\r\n    let issues = await this.jiraApi.searchJQL(jql);\r\n\r\n    let spPerReporter: { name: string; sp: number }[] = [];\r\n\r\n    for (let i of issues) {\r\n      let obj = spPerReporter.find((e) => e.name == i.fields.reporter.name);\r\n\r\n      if (!obj) {\r\n        spPerReporter.push({\r\n          name: i.fields.reporter.name,\r\n          sp: i.fields.customfield_10031,\r\n        });\r\n      } else {\r\n        obj.sp += i.fields.customfield_10031;\r\n      }\r\n    }\r\n\r\n    this.spReporter = spPerReporter.sort((a, b) => b.sp - a.sp);\r\n\r\n    this.spReporter = this.spReporter.filter((r) => {\r\n      return r.sp != null;\r\n    });\r\n  }\r\n\r\n  async spPerProject(sprint: Sprint) {\r\n    let jql = `sprint=${sprint.id} AND  status != Annulé`;\r\n\r\n    let issues = await this.jiraApi.searchJQL(jql);\r\n\r\n    let spPerProject: {\r\n      name: string;\r\n      sp: number;\r\n      tdev: number;\r\n      ttest: number;\r\n      treview: number;\r\n      tdevtot: number;\r\n      issues: { key: string; sp: number }[];\r\n      issueList: string;\r\n    }[] = [];\r\n\r\n    console.log(issues)\r\n\r\n    for (let i of issues) {\r\n      let obj = spPerProject.find((e) => e.name == i.fields.project.name);\r\n\r\n      let tdevtot =\r\n        i.fields.customfield_10084 + i.fields.customfield_10087 + i.fields.customfield_10091;\r\n\r\n      if (!obj) {\r\n        spPerProject.push({\r\n          name: i.fields.project.name,\r\n          sp: i.fields.customfield_10031,\r\n          tdev: i.fields.customfield_10084,\r\n          ttest: i.fields.customfield_10087,\r\n          treview: i.fields.customfield_10091,\r\n          tdevtot: tdevtot,\r\n          issues: [{ key: i.key, sp: i.fields.customfield_10031 }],\r\n          issueList: '',\r\n        });\r\n      } else {\r\n        obj.sp += i.fields.customfield_10031;\r\n        obj.tdevtot += tdevtot;\r\n\r\n        obj.issues.push({ key: i.key, sp: i.fields.customfield_10031 });\r\n      }\r\n    }\r\n    spPerProject = spPerProject\r\n      .filter((e) => {\r\n        let keep = e.sp > 0;\r\n        e.sp = Math.round(e.sp * 100) / 100;\r\n        return keep;\r\n      })\r\n      .sort((a, b) => b.sp - a.sp);\r\n\r\n    for (let e of spPerProject) {\r\n      let str = '';\r\n\r\n      for (let i of e.issues.sort((a, b) => b.sp - a.sp)) {\r\n        str += `<a target=\"_blank\" href=\"${jiraUrl}browse/${i.key}\">${i.key}</a>  (${\r\n          i.sp ? i.sp : 0\r\n        }sp),   `;\r\n      }\r\n      str += `<span class=\"fw-bold\">(#${e.issues.length})<span>`;\r\n\r\n      e.issueList = str;\r\n    }\r\n\r\n    let total = spPerProject.reduce((agg, e) => {\r\n      return agg + e.sp;\r\n    }, 0);\r\n    let totaldev = spPerProject.reduce((agg, e) => {\r\n      return agg + e.tdevtot;\r\n    }, 0);\r\n\r\n    spPerProject.unshift({\r\n      name: 'Total',\r\n      sp: total,\r\n      tdev: 0,\r\n      ttest: 0,\r\n      treview: 0,\r\n      tdevtot: totaldev,\r\n      issues: [],\r\n      issueList: '',\r\n    });\r\n    this.spProject = spPerProject;\r\n  }\r\n\r\n  async majPerProject(sprint: Sprint) {\r\n    let jql = `issuetype in (\"Mise à jour App PROD\", \"Mise à jour DEMO\") AND due > \"${sprint.startDate?.substring(\r\n      0,\r\n      sprint.startDate.indexOf('T')\r\n    )}\" AND due < \"${sprint.endDate?.substring(0, sprint.endDate.indexOf('T'))}\"`;\r\n\r\n    let issues = await this.jiraApi.searchJQL(jql);\r\n\r\n    let majPerProject: { project: string; total: number }[] = [];\r\n\r\n    for (let i of issues) {\r\n      let obj = majPerProject.find((e) => e.project == i.fields.project.name);\r\n\r\n      if (!obj) {\r\n        majPerProject.push({ project: i.fields.project.name, total: 1 });\r\n      } else {\r\n        obj.total++;\r\n      }\r\n    }\r\n\r\n    this.majProject = majPerProject.sort((a, b) => b.total - a.total);\r\n    if (this.majProject.length > 0) {\r\n      let sum = this.majProject.reduce((a, b) => ({\r\n        project: '',\r\n        total: a.total + b.total,\r\n      }));\r\n\r\n      this.majProject.unshift({\r\n        project: 'Total (' + (sum.total / 8).toFixed(1) + ' / jour)',\r\n        total: sum.total,\r\n      });\r\n    }\r\n  }\r\n\r\n  async issuePerType(sprint: Sprint) {\r\n    // let jql = `sprint=${sprint.id} AND summary !~ \"Déductions*\" AND status != Clôturé AND status != Annulé AND issuetype not in (\"Mise à jour App PROD\", \"Mise à jour DEMO\")`\r\n    let jql = `sprint=${sprint.id} AND  status != Annulé `;\r\n    // 8 and &maxResults=1500\r\n    //`sprint=${params.sprintId} AND ${params.more}`\r\n\r\n    let issues = await this.jiraApi.searchJQL(jql);\r\n\r\n    let issuePerType: { type: string; sp: number; devTot: number }[] = [];\r\n\r\n    for (let i of issues) {\r\n      let obj = issuePerType.find((e) => e.type == i.fields.issuetype.name);\r\n\r\n      // \"tdev\": i.fields.customfield_10084, \"ttest\": i.fields.customfield_10087, \"treview\": i.fields.customfield_10091\r\n      if (!obj) {\r\n        issuePerType.push({\r\n          type: i.fields.issuetype.name,\r\n          sp: i.fields.customfield_10031,\r\n          devTot:\r\n            i.fields.customfield_10084 + i.fields.customfield_10087 + i.fields.customfield_10091,\r\n        });\r\n      } else {\r\n        obj.devTot +=\r\n          i.fields.customfield_10084 + i.fields.customfield_10087 + i.fields.customfield_10091;\r\n        obj.sp += i.fields.customfield_10031;\r\n      }\r\n    }\r\n\r\n    this.issuesType = issuePerType.sort((a, b) => b.devTot - a.devTot);\r\n\r\n    let sum = this.issuesType.reduce((a, b) => ({\r\n      type: '',\r\n      sp: a.sp + b.sp,\r\n      devTot: a.devTot + b.devTot,\r\n    }));\r\n\r\n    this.issuesType.unshift({ type: 'Total', sp: sum.sp, devTot: sum.devTot });\r\n\r\n    this.issuesType = this.issuesType.filter((r) => {\r\n      return r.sp != null;\r\n    });\r\n  }\r\n\r\n  // AC = amélioration continue\r\n  async spPerAmeliorationContinue(sprint: Sprint) {\r\n    let tab = this.tabs.find((e) => {\r\n      return e.name === 'SPbyProjectAC';\r\n    });\r\n    let jql;\r\n\r\n    if (this.useOwnJql) {\r\n      jql = `${this.jqlSPbyProjectAC}`;\r\n    } else {\r\n      this.jqlSPbyProjectAC = `sprint=${this.sprintSelected?.id} ${tab.jql}`;\r\n      jql = this.jqlSPbyProjectAC;\r\n    }\r\n\r\n    let issues = await this.jiraApi.searchJQL(jql);\r\n\r\n    let spPerAC: { name: string; sp: number; issues: any[] }[] = [];\r\n\r\n    for (let i of issues) {\r\n      let obj = spPerAC.find((e) => e.name == i.fields.project.name);\r\n\r\n      if (!obj) {\r\n        spPerAC.push({\r\n          name: i.fields.project.name,\r\n          sp: i.fields.customfield_10031,\r\n          issues: [i],\r\n        });\r\n      } else {\r\n        obj.sp += i.fields.customfield_10031;\r\n        obj.issues.push(i);\r\n      }\r\n    }\r\n    for (let i of spPerAC) {\r\n      i.issues.sort((a, b) => b.fields.customfield_10031 - a.fields.customfield_10031);\r\n    }\r\n\r\n    this.spPerAC = spPerAC;\r\n\r\n    let sum;\r\n    if (this.spPerAC.length >= 1) {\r\n      sum = this.spPerAC.reduce((a, b) => ({\r\n        name: '',\r\n        sp: a.sp + b.sp,\r\n        issues: [],\r\n      }));\r\n    }\r\n\r\n    this.spPerAC.unshift({ name: 'Total', sp: sum?.sp, issues: [] });\r\n  }\r\n\r\n  async componentsByProject() {\r\n    if (\r\n      confirm('Voulez-vous vraiment lancer la téléchargement, cela peut prendre environ 3min ?')\r\n    ) {\r\n      this.loadProjects = true;\r\n\r\n      let projects: Project[] = await this.jiraApi.getProjects();\r\n\r\n      let torage: (Project | Composant)[] = projects;\r\n      let promise: Promise<any> = Promise.resolve('start');\r\n      let queue = [];\r\n\r\n      let result = [];\r\n\r\n      let m = {};\r\n      let m2: any = {};\r\n      let i = 0;\r\n\r\n      while (torage.length) {\r\n        if (queue.length > 50) {\r\n          let q = queue;\r\n          promise = promise.then(() => {\r\n            return Promise.all(q);\r\n          });\r\n          queue = [];\r\n        }\r\n        await promise;\r\n\r\n        let f = torage.shift();\r\n\r\n        if ((f as Project).key) {\r\n          queue.push(\r\n            this.jiraApi.getProject(f.id).then((project) => {\r\n              project.components.forEach((c) => {\r\n                m[c.id] = project.id;\r\n                m2[project.id] = {\r\n                  project: project.name,\r\n                  log: [],\r\n                };\r\n                torage.push(c);\r\n              });\r\n\r\n              return 'P' + project.id;\r\n            })\r\n          );\r\n        } else {\r\n          queue.push(\r\n            this.jiraApi\r\n              .getComponent(f.id)\r\n              .then((composant) => {\r\n                let pId = m[composant.id];\r\n                let r = m2[pId];\r\n                let s: string = ' asd 123 ';\r\n                s.trim();\r\n                result.push(`${r.project?.trim()};${composant?.name.trim()};${composant.archived}`);\r\n\r\n                return 'C' + composant.id;\r\n              })\r\n              .catch((e) => {\r\n                let pId = m[f.id];\r\n                let r = m2[pId];\r\n                r.log.push('error ' + f.id);\r\n              })\r\n          );\r\n        }\r\n      }\r\n\r\n      result.unshift('Projet;Composant;Archive');\r\n\r\n      let csvArray = result.join('\\r\\n');\r\n      var blob = new Blob([csvArray], { type: 'text/csv' });\r\n      this.loadProjects = false;\r\n      saveAs(blob, 'Projets-Composants.csv');\r\n    }\r\n  }\r\n\r\n  back() {\r\n    this.router.navigate(['home']);\r\n  }\r\n\r\n  openIssue(key: string) {\r\n    window.open(jiraUrl + 'browse/' + key, '_blank');\r\n  }\r\n}\r\n","<div class=\"text-center text-white mb-5 mt-4\">\r\n  <div class=\"col-lg-7 mx-auto\">\r\n    <h1 class=\"display-3\">Sprint Board</h1>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"fs-4 text-white\" style=\"cursor:pointer; position: absolute;top: 8%; padding-left: 1em;\">\r\n  <a (click)=\"back();\"> ◀ Back </a>\r\n</div>\r\n\r\n\r\n<div class=\"container\">\r\n\r\n  <div class=\"sprint\">\r\n\r\n    <label class=\"form-label text-white\">Sprints</label>\r\n    <select (change)=\"onSprintChange()\" [(ngModel)]=\"sprintSelected\" size=\"3\" class=\"form-control\">\r\n      <option *ngFor=\"let s of this.sprints\" [ngValue]=\"s\">{{s.name}}</option>\r\n    </select>\r\n\r\n    <div class=\"mt-2\">\r\n      <div *ngIf=\"this.loadProjects\">\r\n        <div class=\"spinner-border text-primary\" role=\"status\">\r\n        </div>\r\n        <div class=\"text-white\">\r\n          ~3min...\r\n        </div>\r\n      </div>\r\n\r\n    <!-- Revoir le code probleme en changeant le getproject avec la key pour jira cloud   <button *ngIf=\"!this.loadProjects\" class=\"btn btn-primary\" (click)=\"componentsByProject()\">Download\r\n        Projets/Composants</button> -->\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n\r\n    <div class=\"col-lg-6\">\r\n\r\n      <div class=\"rounded-3\" style=\"padding: 2em ; background-color: #fbfbfb33; height: 600px \">\r\n\r\n        <div class=\"tableFixHead  list-group-flush bg-white border\" style=\"height: 100%;\">\r\n\r\n          <table class=\"table table-striped caption-top\">\r\n            <caption>Story points par projet</caption>\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Project</th>\r\n                <th scope=\"col\">SP</th>\r\n                <th scope=\"col\">Heures</th>\r\n                <th scope=\"col\" style=\"text-align: center;\">Tickets</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n              <tr *ngFor=\"let r of spProject;\" class=\"table-info\">\r\n\r\n                <td>{{r.name}}</td>\r\n                <td>{{r.sp.toFixed(1) }}</td>\r\n                <td>{{r.tdevtot.toFixed(1) }}</td>\r\n                <!-- <td>{{r.sp }}</td> -->\r\n                <td>\r\n                  <div [innerHTML]=\"r.issueList\"></div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-lg-6\">\r\n\r\n      <div class=\"rounded-3\" style=\"padding: 2em; background-color: #fbfbfb33; height: 600px\">\r\n\r\n        <div class=\"tableFixHead list-group-flush bg-white border\" style=\"height: 100%;\">\r\n          <div class=\"text-end\">\r\n            <input type=\"checkbox\" (change)=\"onSprintChange()\" [(ngModel)]=\"useOwnJql\"> Custom filter\r\n          </div>\r\n          <div class=\"text-start\">\r\n            <textarea *ngIf=\"useOwnJql\" name=\"\" id=\"\" cols=\"80\" rows=\"1\" [disabled]=\"!useOwnJql\"\r\n              [(ngModel)]=\"jqlSPbyProjectAC\"></textarea>\r\n          </div>\r\n          <button *ngIf=\"useOwnJql\" class=\"btn btn-primary\" (click)=\"onSprintChange()\">Refresh</button>\r\n          <table class=\"table table-striped caption-top\">\r\n            <caption>Story Points par project AC</caption>\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Project</th>\r\n                <th scope=\"col\">Story Point</th>\r\n                <th scope=\"col\" style=\"text-align: center;\">Tickets</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let r of spPerAC; let index = index\" class=\"table-info\">\r\n                <th scope=\"row\">{{index}}</th>\r\n                <td>{{r.name}}</td>\r\n                <td>{{r.sp?.toFixed(1) }}</td>\r\n                <td>\r\n\r\n                  <span *ngFor=\"let i of r.issues\" (click)=\"openIssue(i.key)\">\r\n                    <a href=\"#\" onclick=\"return false;\">{{i.key}}</a>\r\n                    ({{i.fields.customfield_10031}}sp),&nbsp;\r\n                  </span>\r\n                  <span class=\"fw-bold\" *ngIf=\"r.issues.length > 0\">(#{{r.issues.length}})</span>\r\n\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <!-- let issuePerType: { type: string; total: number; devTot:number}[] = []; -->\r\n  <div class=\"row\">\r\n\r\n    <div class=\"col-lg-6\">\r\n\r\n      <div class=\"rounded-3\" style=\"padding: 2em; background-color: #fbfbfb33; height: 600px \">\r\n\r\n        <div class=\"tableFixHead list-group-flush bg-white border\" style=\"height: 100%;\">\r\n          <table class=\"table table-striped caption-top\">\r\n            <caption>Tickets par type</caption>\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Type</th>\r\n                <th scope=\"col\">SP</th>\r\n                <th scope=\"col\">Heures</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let r of issuesType; let index = index\" class=\"table-info\">\r\n                <th scope=\"row\">{{index}}</th>\r\n                <td>{{r.type}}</td>\r\n                <td>{{r.sp.toFixed(1) }}</td>\r\n                <td>{{r.devTot.toFixed(1) }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"col-lg-6\">\r\n\r\n      <div class=\"rounded-3\" class=\"flex-sa mb-2\" style=\"padding: 2em; background-color: #fbfbfb33; height: 600px\">\r\n\r\n        <div class=\"tableFixHead list-group-flush bg-white border\" style=\" height: 100%; width:45%\">\r\n          <table class=\"table table-striped caption-top\">\r\n            <caption>Story points par reporter</caption>\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Reporter</th>\r\n                <th scope=\"col\">Story Point</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let r of spReporter; let index = index\" class=\"table-info\">\r\n                <th scope=\"row\">{{index}}</th>\r\n                <td>{{r.name}}</td>\r\n                <td>{{r.sp.toFixed(1) }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div class=\"tableFixHead  list-group-flush bg-white border\" style=\"height: 100%;  width:45%\">\r\n          <table class=\"table table-striped caption-top\">\r\n            <caption>M.A.J par projet</caption>\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Project</th>\r\n                <th scope=\"col\">Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr *ngFor=\"let r of majProject; let index = index\" class=\"table-info\">\r\n                <th scope=\"row\">{{index}}</th>\r\n                <td>{{r.project}}</td>\r\n                <td>{{r.total }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { transition } from '@angular/animations';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { endOfDay, format, formatISO, isAfter, isBefore, isSameDay, startOfDay } from 'date-fns';\r\nimport { fr } from 'date-fns/locale';\r\nimport { Issue } from 'jira.js/out/agile/models';\r\nimport { Sprint } from 'jira.js/out/agile/models/sprint';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { JiraApi } from 'src/app/api/jiraApi';\r\nimport { ProjectxApi } from 'src/app/api/projectxApi';\r\nimport IInstance from 'src/app/interfaces/instance';\r\nimport { IIssue } from 'src/app/interfaces/jira';\r\nimport IProject from 'src/app/interfaces/project';\r\nimport IUpdate from 'src/app/interfaces/update';\r\nimport { AuthService } from 'src/app/services/authService.service';\r\nimport { DateService } from 'src/app/services/date.service';\r\nimport { environment, jiraUrl } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'updateModal',\r\n  templateUrl: './update.component.html',\r\n  styleUrls: ['./update.component.scss'],\r\n})\r\nexport class UpdateComponent implements OnInit {\r\n  @Input()\r\n  public mode: 'create' | 'patch' | 'delete' = 'create';\r\n\r\n  // Mode create:\r\n  @Input() public project: IProject = {\r\n    instances: [],\r\n    jiraId: '',\r\n    key: '',\r\n    name: '',\r\n    _id: '',\r\n  };\r\n  @Input()\r\n  public instance!: IInstance;\r\n\r\n  // Mode: patch, update alreadyExist\r\n  public update: IUpdate;\r\n\r\n  public nextsUpdates: {\r\n    lastUpdatesInstance: IUpdate[];\r\n    updatesInstance: IUpdate[];\r\n    updatesServer: IUpdate[];\r\n  } = {\r\n    lastUpdatesInstance: [],\r\n    updatesInstance: [],\r\n    updatesServer: [],\r\n  };\r\n\r\n  public sprint: Sprint = { id: 0, state: '', name: '' };\r\n  public sprints: Sprint[] = [];\r\n  public composants: any[] = [];\r\n  public dateSelected: Date;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private toastr: ToastrService,\r\n    private jiraApi: JiraApi,\r\n    private projectxApi: ProjectxApi,\r\n    private activeModal: NgbModal,\r\n    private auth: AuthService,\r\n    private dateService: DateService\r\n  ) {}\r\n\r\n  public updateCreateForm = this.fb.group({\r\n    date: ['', Validators.required],\r\n    instance: ['', Validators.required],\r\n    composant: ['', Validators.required],\r\n    project: ['', Validators.required],\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    this.toastr.toastrConfig.disableTimeOut = true;\r\n\r\n    this.dateSelected = this.update?.dueDate ? new Date(this.update?.dueDate) : new Date();\r\n    console.log(this.mode);\r\n    this.init();\r\n  }\r\n\r\n  async init() {\r\n    if(environment.demo) {\r\n      this.sprint = { id: 0, state: '', name: \"Sprint F - February\" };\r\n    } \r\n    else {\r\n\r\n      await this.projectxApi\r\n      .getNextsUpdates(this.instance.id)\r\n      .subscribe(\r\n        (data: {\r\n          lastUpdatesInstance: IUpdate[];\r\n          updatesInstance: IUpdate[];\r\n          updatesServer: IUpdate[];\r\n        }) => {\r\n          console.log(data);\r\n          this.dateService.sortByDate(data.updatesInstance, 'dueDate');\r\n          this.dateService.sortByDate(data.updatesServer, 'dueDate');\r\n          this.dateService.sortByDate(data.lastUpdatesInstance, 'dueDate');\r\n          this.nextsUpdates.updatesInstance = data.updatesInstance;\r\n          this.nextsUpdates.updatesServer = data.updatesServer;\r\n          this.nextsUpdates.lastUpdatesInstance = data.lastUpdatesInstance.reverse();\r\n        }\r\n        );\r\n      }\r\n        \r\n    this.updateCreateForm.controls['date'].setValue(\r\n      format(new Date(this.dateSelected), 'dd MMM yyyy', { locale: fr })\r\n    );\r\n    this.updateCreateForm.controls['instance'].setValue(this.instance?.target);\r\n    this.updateCreateForm.controls['project'].setValue(this.project.name);\r\n    let project;\r\n    let sprints ;\r\n    if(!environment.demo) {\r\n    if (this.project.jiraId) {\r\n      project = await this.jiraApi.getProject(this.project.key);\r\n    }\r\n    sprints = await this.jiraApi.getSprints();\r\n  }\r\n\r\n    if (project?.components?.length > 0) {\r\n      this.composants = project.components.map(function (item: any) {\r\n        return { name: item['name'], id: item['id'] };\r\n      });\r\n    } else {\r\n      this.composants.push({ name: 'Pas de composant', id: 0 });\r\n    }\r\n\r\n    if (sprints?.values) {\r\n      this.sprints = sprints.values;\r\n\r\n      this.sprint = this.getSprint(this.sprints);\r\n    }\r\n  }\r\n\r\n  async onSubmit() {\r\n    switch (this.mode) {\r\n      case 'create':\r\n        await this.createUpdate();\r\n        break;\r\n\r\n      case 'patch':\r\n        await this.patchUpdate();\r\n        break;\r\n\r\n      case 'delete':\r\n        await this.deleteUpdate();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private getSprint(sprints: Sprint[]): Sprint {\r\n    let sprintSelected!: Sprint;\r\n\r\n    for (let sprint of sprints) {\r\n      // TO DO UTILISER .aftter and .before plutot que compareAsc\r\n      //  return 1 if the first date is after the second, -1 if the first date is before\r\n\r\n      let dateSel = startOfDay(this.dateSelected);\r\n      let spStart = startOfDay(new Date(sprint.startDate || ''));\r\n      let spEnd = endOfDay(new Date(sprint.endDate || ''));\r\n\r\n      if (\r\n        (isSameDay(dateSel, spStart) || isAfter(dateSel, spStart)) &&\r\n        (isSameDay(dateSel, spEnd) || isBefore(dateSel, spEnd)) &&\r\n        sprint.name.includes('Robusta')\r\n      ) {\r\n        return (sprintSelected = sprint);\r\n      }\r\n    }\r\n    return sprintSelected;\r\n  }\r\n\r\n  // Fonction sur le composant enfant \"<calendar-component>\"\" qui récupère la valeur emise par ce child composant.\r\n  dayClickedEventHander(date: Date) {\r\n    this.dateSelected = date;\r\n    if(!environment.demo) {\r\n      this.sprint = this.getSprint(this.sprints);\r\n    } \r\n\r\n    this.updateCreateForm.controls['date'].setValue(format(date, 'dd MMM yyyy', { locale: fr }));\r\n  }\r\n\r\n  async createUpdate() {\r\n    let issueFields: IIssue = {\r\n      project: { key: this.project?.key },\r\n      summary: `M.A.J - ${this.instance?.target} - s${this.instance?.server.number} - ${this.updateCreateForm.value.date}`,\r\n      description: `Mise à jour générée par ProjectX - URL :${this.instance.url}`,\r\n      components: [\r\n        {\r\n          id:\r\n            this.updateCreateForm.value?.composant?.toString() === 0\r\n              ? null\r\n              : this.updateCreateForm.value.composant.toString(),\r\n        },\r\n      ],\r\n      customfield_10020: this.sprint.id,\r\n      duedate: endOfDay(this.dateSelected),\r\n      issuetype: {\r\n        name: this.instance?.type === 'PROD' ? 'Mise à jour App PROD' : 'Mise à jour DEMO',\r\n      },\r\n      assignee: null,\r\n    };\r\n\r\n    let preIssue = { fields: issueFields };\r\n\r\n    let issue: Issue = await this.jiraApi.postIssue(preIssue).catch(() => {\r\n      throw this.handleError('Jira Failure ', \"Vérifiez l'état de votre ticket JIRA\");\r\n    });\r\n\r\n    this.openIssue(issue.key);\r\n\r\n    let preUpdate: IUpdate = {\r\n      dueDate: this.dateSelected,\r\n      url: this.instance.url,\r\n      instance: this.instance,\r\n      keyJira: issue.key,\r\n    };\r\n\r\n    await this.projectxApi.postUpdate(preUpdate).catch(() => {\r\n      throw this.handleError('Post projectX Update' + this.update.keyJira);\r\n    });\r\n\r\n    // refresh le calendar\r\n    this.activeModal.dismissAll();\r\n  }\r\n\r\n  async patchUpdate(): Promise<void> {\r\n    await this.projectxApi.patchUpdate(this.update, { dueDate: this.dateSelected }).catch(() => {\r\n      throw this.handleError('ProjectX : Update failed' + this.update.keyJira);\r\n    });\r\n\r\n    await await this.jiraApi\r\n      .putIssue(this.update.keyJira, {\r\n        fields: {\r\n          summary: `M.A.J - ${this.instance?.target} - s${this.instance?.server.number} - ${this.updateCreateForm.value.date}`,\r\n          duedate: endOfDay(this.dateSelected),\r\n          customfield_10020: this.sprint.id,\r\n        },\r\n      })\r\n      .catch(() => {\r\n        throw this.handleError(\r\n          'Erreur ',\r\n          \"Vérifiez l'état de votre ticket JIRA et contactez l'administateur\" + this.update.keyJira\r\n        );\r\n      });\r\n\r\n    this.activeModal.dismissAll();\r\n  }\r\n\r\n  async deleteUpdate(): Promise<void> {\r\n    await this.projectxApi.deleteUpdate(this.update).catch(() => {\r\n      throw this.handleError('ProjectX : Update failed ' + this.update.keyJira);\r\n    });\r\n\r\n    await await this.jiraApi\r\n      .putIssue(this.update.keyJira, { fields: { duedate: null, summary: 'M.A.J annulée' } })\r\n      .catch(() => {\r\n        throw this.handleError(\r\n          'Jira Failure ',\r\n          \"Vérifiez l'état de votre ticket JIRA:\" + this.update.keyJira\r\n        );\r\n      });\r\n    this.toastr.warning(\"Vérifiez l'état de votre ticket JIRA: \" + this.update.keyJira, null, {\r\n      timeOut: 8000,\r\n    });\r\n\r\n    // let transistion = await this.jiraApi.getIssueTransition(this.update.keyJira).catch(() => {\r\n    //   throw this.handleError(\"ProjectX : Update failed\")\r\n    // });\r\n\r\n    // transistion.transitions.find(e => e.name.includes)\r\n    // '291' : '241' Annulé Probablement résolu\r\n    // await await this.jiraApi.postIssueTransition(this.update.keyJira, transitionId).catch(() => {\r\n    //   throw this.handleError(\"JIra: Update issue failed\");\r\n    // });;\r\n\r\n    this.activeModal.dismissAll();\r\n  }\r\n\r\n  openIssue(key: string) {\r\n    window.open(jiraUrl + 'browse/' + key, '_blank');\r\n  }\r\n\r\n  private handleError<T>(message, title = 'Failure', result?: T) {\r\n    this.toastr.error(title, message);\r\n    this.activeModal.dismissAll();\r\n    return (error: any): Observable<T> => {\r\n      // TODO: send the error to remote logging infrastructure\r\n      console.error(error); // log to console instead\r\n\r\n      // TODO: better job of transforming error for user consumption\r\n      console.log(`${message} failed: ${error.message}`);\r\n\r\n      // Let the app keep running by returning an empty result.\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <!-- <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">Profile update</h4>\r\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"></button>\r\n  </div> -->\r\n  <div class=\"row\" style=\"padding: 2em 2em 2em 2em ;\">\r\n    <div class=\"col-6\">\r\n      <form [formGroup]=\"updateCreateForm\" novalidate (ngSubmit)=\"onSubmit()\">\r\n\r\n        <div class=\"mb-3\" *ngIf=\"mode === 'patch' || mode === 'delete'\">\r\n          <label for=\"key\" class=\"form-label\">Jira key</label>\r\n          <div class=\"form-control\"> <a [attr.disabled]=\"true\" target=\"_blank\"\r\n              (click)=\"openIssue(this.update.keyJira)\">{{this.update.keyJira}}</a></div>\r\n        </div>\r\n\r\n        <div class=\"flex-center\">\r\n          <label *ngIf=\"this.instance.server?.config?.updateAfter && mode != 'delete'\" for=\"date\"\r\n            class=\"form-label blink_text text-danger\">\r\n            🚨 MISE A JOUR TARDIVE (MERCREDI)🚨</label>\r\n        </div>\r\n        <div class=\"mb-3\">\r\n          <label for=\"date\" class=\"form-label\">Date</label>\r\n          <input id=\"date\" [attr.disabled]=\"true\" type=\"text\" class=\"form-control  fw-bold fs-5\" formControlName=\"date\">\r\n        </div>\r\n\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"date\" class=\"form-label\">Sprint</label>\r\n          <div class=\"form-control\" [ngClass]=\"{'text-danger' : !this.sprint}\"> {{this.sprint?.name || 'Sprint\r\n            introuvable'}}</div>\r\n        </div>\r\n\r\n        <div class=\"mb-3\" *ngIf=\"mode === 'create'\">\r\n          <label for=\"project\" class=\"form-label\">Project</label>\r\n          <input id=\"project\" [attr.disabled]=\"true\" type=\"text\" class=\"form-control\" formControlName=\"project\">\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"instance\" class=\"form-label\">ERP Instance</label>\r\n          <input id=\"instance\" [attr.disabled]=\"true\" type=\"text\" class=\"form-control\" formControlName=\"instance\">\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"project\" class=\"form-label\">ERP URL</label>\r\n          <div class=\"form-control\"> <a [attr.disabled]=\"true\" target=\"_blank\"\r\n              href=\"{{this.instance.url}}\">{{this.instance.url}}</a></div>\r\n        </div>\r\n\r\n        <div class=\"form-group\" class=\"mb-3\" *ngIf=\"mode === 'create'\">\r\n          <label for=\"composants\">Composants</label>\r\n          <select multiple class=\"form-control\" formControlName=\"composant\" id=\"composants\">\r\n\r\n            <option *ngFor=\"let c of this.composants\" [value]=\"c.id\">{{c.name}}</option>\r\n\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"project\" class=\"form-label\">Dernière M.A.J de l'ERP :\r\n            <span style=\"color:crimson\">{{this.instance.target}}</span></label>\r\n          <ul>\r\n            <li *ngIf=\"this.nextsUpdates?.lastUpdatesInstance[0]?.dueDate\">\r\n              {{this.nextsUpdates?.lastUpdatesInstance[0]?.dueDate | date}}</li>\r\n            <li *ngIf=\"!this.nextsUpdates?.lastUpdatesInstance[0]?.dueDate\">\r\n              - </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"project\" class=\"form-label\">M.à.J prévue(s) de l'ERP:\r\n            <span style=\"color:crimson\">{{this.instance.target}}</span></label>\r\n          <ul>\r\n            <div *ngIf=\"this.nextsUpdates?.updatesInstance.length > 0\">\r\n              <li *ngFor=\"let update of this.nextsUpdates?.updatesInstance\">{{update.dueDate | date}}</li>\r\n            </div>\r\n            <div *ngIf=\"!this.nextsUpdates?.updatesInstance.length\">\r\n              <li>-</li>\r\n            </div>\r\n          </ul>\r\n\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n          <label for=\"project\" class=\"form-label\">M.à.J prévue(s) sur le SERVEUR:\r\n            <span style=\"color:crimson\">{{this.instance.server.number}}</span></label>\r\n          <ul>\r\n            <li *ngFor=\"let update of this.nextsUpdates?.updatesServer\">{{update.dueDate | date}}</li>\r\n          </ul>\r\n        </div>\r\n\r\n\r\n\r\n        <div class=\"d-grid gap-2\">\r\n\r\n          <button *ngIf=\"mode != 'delete'\" type=\"submit\"\r\n            [disabled]=\" !this.sprint || !updateCreateForm.valid && mode === 'create'\"\r\n            class=\"btn btn-primary btn-block mb-3\">Sauver</button>\r\n\r\n          <button *ngIf=\"mode === 'delete'\" type=\"submit\" class=\"btn btn-danger btn-block mb-3\">Annuler la\r\n            m.a.j</button>\r\n        </div>\r\n\r\n\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"col-6\">\r\n      <calendar-component (dayClickedEvent)=\"dayClickedEventHander($event)\" [eventEditable]=\"false\" [isModal]=\"true\">\r\n      </calendar-component>\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n</div>\r\n","import { ListRange } from '@angular/cdk/collections'\r\nimport { CdkVirtualScrollViewport, VirtualScrollStrategy, VIRTUAL_SCROLL_STRATEGY } from '@angular/cdk/scrolling'\r\nimport { ChangeDetectorRef, Directive, ElementRef, forwardRef, Input, OnChanges, SimpleChanges } from '@angular/core'\r\nimport { Observable, Subject } from 'rxjs'\r\nimport { distinctUntilChanged } from 'rxjs/operators'\r\n\r\ntype ItemHeight = number[]\r\ntype Range = [number, number]\r\nconst intersects = (a: Range, b: Range): boolean => (\r\n  (a[0] <= b[0] && b[0] <= a[1]) ||\r\n  (a[0] <= b[1] && b[1] <= a[1]) ||\r\n  (b[0] < a[0] && a[1] < b[1])\r\n)\r\nconst clamp = (min: number, value: number, max: number): number => Math.min(Math.max(min, value), max)\r\nconst isEqual = <T>(a: T, b: T) => a === b\r\nconst last = <T>(value: T[]): T => value[value.length-1]\r\n\r\nexport class CustomVirtualScrollStrategy implements VirtualScrollStrategy {\r\n  constructor(private itemHeights: ItemHeight) {}\r\n  private viewport?: CdkVirtualScrollViewport\r\n  private scrolledIndexChange$ = new Subject<number>()\r\n  public scrolledIndexChange: Observable<number> = this.scrolledIndexChange$.pipe(distinctUntilChanged())\r\n  _minBufferPx = 100\r\n  _maxBufferPx = 100\r\n  attach(viewport: CdkVirtualScrollViewport) {\r\n    this.viewport = viewport;\r\n    this.updateTotalContentSize()\r\n    this.updateRenderedRange()\r\n  }\r\n  detach() {\r\n    this.scrolledIndexChange$.complete()\r\n    delete this.viewport\r\n  }\r\n  public updateItemHeights(itemHeights: ItemHeight) {\r\n    this.itemHeights = itemHeights\r\n    this.updateTotalContentSize()\r\n    this.updateRenderedRange()\r\n  }\r\n  private getItemOffset(index: number): number {\r\n    return this.itemHeights.slice(0, index).reduce((acc, itemHeight) => acc + itemHeight, 0)\r\n  }\r\n  private getTotalContentSize(): number {\r\n    return this.itemHeights.reduce((a,b)=>a+b, 0)\r\n  }\r\n  private getListRangeAt(scrollOffset: number, viewportSize: number): ListRange {\r\n    type Acc = {itemIndexesInRange: number[], currentOffset: number}\r\n    const visibleOffsetRange: Range = [scrollOffset, scrollOffset + viewportSize]\r\n    const itemsInRange = this.itemHeights.reduce<Acc>((acc, itemHeight, index) => {\r\n      const itemOffsetRange: Range = [acc.currentOffset, acc.currentOffset + itemHeight]\r\n      return {\r\n        currentOffset: acc.currentOffset + itemHeight,\r\n        itemIndexesInRange: intersects(itemOffsetRange, visibleOffsetRange)\r\n          ? [...acc.itemIndexesInRange, index]\r\n          : acc.itemIndexesInRange\r\n      }\r\n    }, {itemIndexesInRange: [], currentOffset: 0}).itemIndexesInRange\r\n    const BUFFER_BEFORE = 5\r\n    const BUFFER_AFTER = 5\r\n    return {\r\n      start: clamp(0, (itemsInRange[0] ?? 0) - BUFFER_BEFORE, this.itemHeights.length - 1),\r\n      end: clamp(0, (last(itemsInRange) ?? 0) + BUFFER_AFTER, this.itemHeights.length)\r\n    }\r\n  }\r\n  private updateRenderedRange() {\r\n    if (!this.viewport) return\r\n\r\n    const viewportSize = this.viewport.getViewportSize();\r\n    const scrollOffset = this.viewport.measureScrollOffset();\r\n    const newRange = this.getListRangeAt(scrollOffset, viewportSize)\r\n    const oldRange = this.viewport?.getRenderedRange()\r\n\r\n    if (isEqual(newRange, oldRange)) return\r\n\r\n    this.viewport.setRenderedRange(newRange);\r\n    this.viewport.setRenderedContentOffset(this.getItemOffset(newRange.start));\r\n    this.scrolledIndexChange$.next(newRange.start);\r\n  }\r\n  private updateTotalContentSize() {\r\n    const contentSize = this.getTotalContentSize()\r\n    this.viewport?.setTotalContentSize(contentSize)\r\n  }\r\n  onContentScrolled() {\r\n    this.updateRenderedRange()\r\n  }\r\n  onDataLengthChanged() {\r\n    this.updateTotalContentSize()\r\n    this.updateRenderedRange()\r\n  }\r\n  onContentRendered() {}\r\n  onRenderedOffsetChanged() {}\r\n  scrollToIndex(index: number, behavior: ScrollBehavior) {\r\n    this.viewport?.scrollToOffset(this.getItemOffset(index), behavior)\r\n  }\r\n}\r\n\r\nfunction factory (dir: CustomVirtualScrollDirective) {\r\n  return dir.scrollStrategy\r\n}\r\n\r\n@Directive({\r\n  selector: 'cdk-virtual-scroll-viewport[customVirtualScrollStrategy]',\r\n  providers: [{\r\n    provide: VIRTUAL_SCROLL_STRATEGY,\r\n    useFactory: factory,\r\n    deps: [forwardRef(() => CustomVirtualScrollDirective)]\r\n  }],\r\n})\r\nexport class CustomVirtualScrollDirective implements OnChanges {\r\n  constructor(private elRef: ElementRef, private cd: ChangeDetectorRef) {}\r\n  @Input() itemHeights: ItemHeight = []\r\n  scrollStrategy: CustomVirtualScrollStrategy = new CustomVirtualScrollStrategy(this.itemHeights)\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if ('itemHeights' in changes) {\r\n      this.scrollStrategy.updateItemHeights(this.itemHeights)\r\n      this.cd.detectChanges()\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AuthService } from '../services/authService.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class isLoginGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) {\r\n\r\n  }\r\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\r\n  \r\n  let userToken = await this.authService?.getToken() || false;\r\n\r\n\r\n // c'est moche vu que le token je le sauve pas dans le local storage, si on refresh une page forcement le token existe plus mais pas plus mal pour v1\r\n    if(userToken || environment.demo){\r\n      return true;\r\n    } else{\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport IProject from 'src/app/interfaces/project';\r\nimport IInstance from '../interfaces/instance';\r\n\r\n@Pipe({ name: 'projectsFilterPipe' })\r\nexport class ProjectsFilterPipe implements PipeTransform {\r\n  transform(allprojects: IProject[], searchStr: string) {\r\n\r\n    if (searchStr && searchStr.trim() !== '') {\r\n      searchStr = searchStr.toLowerCase();\r\n\r\n      allprojects = allprojects.filter((project) => {\r\n\r\n\r\n        for (let instance of project.instances) {\r\n\r\n          if(instance.target?.toLowerCase().includes(searchStr) || instance.server?.number.toLowerCase().includes(searchStr)){\r\n            return true;\r\n          }\r\n\r\n        }\r\n\r\n        return false;\r\n\r\n\r\n      });\r\n\r\n    }\r\n    return allprojects;\r\n  }\r\n}\r\n\r\n\r\n\r\n@Pipe({ name: 'instancesFilterPipe' })\r\nexport class InstancesFilterPipe implements PipeTransform {\r\n  transform(allInstances: IInstance[], searchStr: string) {\r\n\r\n\r\n    if (searchStr && searchStr.trim() !== '') {\r\n      allInstances = allInstances.filter((instance) => {\r\n        return (instance.target?.toLowerCase().includes(searchStr) || instance.server?.name.toLowerCase().includes(searchStr))\r\n      });\r\n\r\n    }\r\n\r\n    return allInstances;\r\n\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ArrayUtilsService {\r\n\r\n  constructor() { }\r\n\r\n  sortAlpha(array, props) {\r\n\r\n    return array = array.sort((a, b) => {\r\n      let fa = a[props]?.trim().toLowerCase(),\r\n        fb = b[props]?.trim().toLowerCase();\r\n      if (fa < fb) {\r\n        return -1;\r\n      }\r\n      if (fa > fb) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    })\r\n  }\r\n\r\n  sortNumeric(array, props) {\r\n\r\n    return array = array.sort((a, b) => {\r\n      let fa = parseInt(a[props]),\r\n        fb = parseInt(b[props]);\r\n      if (fa < fb) {\r\n        return -1;\r\n      }\r\n      if (fa > fb) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport IUser from '../interfaces/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  // Never store the password, but keepit in service durgin the session\r\n  private user: IUser | undefined;\r\n\r\n\r\n  constructor() { }\r\n\r\n  async setUser(user: IUser) {\r\n    // pas besoin d'await?\r\n    this.user = user;\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n\r\n\r\n  }\r\n\r\n  async setToken(token: string) {\r\n    // pas besoin d'await?\r\n    this.user.token = token;\r\n   \r\n\r\n  }\r\n\r\n  \r\n  async getToken() {\r\n    // pas besoin d'await?\r\n   return this.user?.token || false\r\n  // return \"this.user.token\"\r\n   \r\n\r\n  }\r\n\r\n\r\n  async setUserSecret(secret: string) {\r\n    let data = await localStorage.getItem('user');\r\n    let user: IUser = JSON.parse(data);\r\n    user.secret = secret;\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n\r\n  }\r\n\r\n\r\n  async getSotrageUser(): Promise<IUser> {\r\n\r\n    // si on demande le mot de passe on prend le user en cache , on en sauve pas le pw dans le local storage\r\n\r\n    let user = await localStorage.getItem('user') || '{}';\r\n\r\n    let userReturn: IUser = JSON.parse(user);\r\n\r\n    userReturn.pw = this.user?.pw;\r\n\r\n    return userReturn;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { isAfter, isBefore, parseISO } from 'date-fns';\r\nimport { Sprint } from 'jira.js/out/agile/models';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DateService {\r\n\r\n  constructor() { }\r\n\r\n\r\n\r\n  sortByDate(array: any[], fieldName: string) {\r\n    array.sort((a, b) => {\r\n      // Turn your strings into dates, and then subtract them\r\n      // to get a value that is either negative, positive, or zero.\r\n\r\n      return new Date(a[fieldName]).valueOf() - new Date(b[fieldName]).valueOf();\r\n    });\r\n  }\r\n\r\n/**\r\n * Oui c'est moche Sprint | any\r\n */\r\n  getActiveSprint(sprints:Sprint[]): number {\r\n    // if((check.getTime() <= to.getTime() && check.getTime() >= from.getTime()))\r\nlet index = 0\r\n;    this.sortByDate(sprints, 'startDate');\r\n\r\n    for (const [i, s] of sprints.entries()) {\r\n      if(new Date().getTime() >= new Date(s.startDate!).getTime()) {\r\n        index = i;\r\n        break;\r\n      }\r\n\r\n      // if (isBefore(new Date(), parseISO(s.startDate!)) && isAfter(new Date(), parseISO(s.endDate!))) {\r\n      //   return i\r\n      // }\r\n    }\r\n    return index;\r\n  }\r\n\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport IPoject from \"../interfaces/project\";\r\nimport { ProjectxApi } from '../api/projectxApi';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectsService {\r\n\r\n  projects: IPoject[] = [];\r\n\r\n\r\n\r\n  constructor(private api: ProjectxApi) { }\r\n\r\n\r\n  addProject(project: IPoject) {\r\n    this.projects.push(project);\r\n  }\r\n\r\n  /** GET project from the server */\r\n  getProjects(onlyWithInstances:boolean): Observable<IPoject[]> {\r\n    return this.api.getProjects(onlyWithInstances);\r\n  }\r\n\r\n  clearList() {\r\n    this.projects = [];\r\n    return this.projects;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { ProjectxApi } from '../api/projectxApi';\nimport IServer from '../interfaces/server';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServersService {\n\n  constructor(private api: ProjectxApi) { }\n\n\n  \n  /** GET heroes from the server */\n  getServers(): Observable<IServer[]> {\n    return this.api.getServers();\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport IUpdate from '../interfaces/update';\r\nimport { ProjectxApi } from '../api/projectxApi';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UpdatesService {\r\n\r\n  constructor(private api: ProjectxApi) { }\r\n\r\n\r\n  getUpdates(): Observable<IUpdate[]> {\r\n    return this.api.getUpdates();\r\n  }\r\n\r\n}\r\n","export const jiraUrl = \"\";\r\nexport const jiraApi = \"\";\r\n\r\n\r\nexport const environment = {\r\n  production: false,\r\n  demo :true,\r\n  projectxApiEndpoint: '',\r\n  jiraApiEndpoint: jiraApi + 'rest/api/2/',\r\n  jiraApiAuth: jiraApi + 'auth/1/session',\r\n  jiraApiAgile: jiraApi + 'rest/agile/1.0/',\r\n  jiraCallback: '',\r\n  jiraClientSecret: '',\r\n  jiraClientId: '',\r\n  jiraOauthTokenUrl: 'https://auth.atlassian.com/oauth/token',\r\n  jiraCloudIdUrl: 'https://api.atlassian.com/oauth/token/accessible-resources',\r\n  jiraScope: \"\",\r\n  jiraState: \"\",\r\n  superUsers : []\r\n\r\n  \r\n\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport '@fortawesome/fontawesome-free/js/all.js';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["HttpHeaders","lastValueFrom","map","of","tap","environment","JiraApi","constructor","http","authService","jiraCallback","jiraClientSecret","jiraClientId","jiraOauthTokenUrl","jiraCloudIdUrl","jiraApiEndpoint","jiraApiAuth","jiraApiAgile","postCodeToGetAccessToken","code","user","getSotrageUser","headerDict","Accept","requestOptions","headers","body","grant_type","client_id","client_secret","redirect_uri","post","pipe","data","getCloudId","Authorization","get","_","console","log","getMySelf","token","getToken","apiPath","getSprints","apiAgilePath","getProject","projectKey","getProjects","getComponent","id","getMaj","projectId","searchJQL","query","jql","issues","fetchMoreResult","currentIndex","res","push","length","total","postIssue","issue","putIssue","issueKey","put","postIssueTransition","transitionId","transition","getIssue","issueIdOrKey","getIssueTransition","handleError","operation","result","error","message","i0","factory","providedIn","ProjectxApi","auth","projectxApiEndpoint","setSecret","secret","onlyWithInstances","path","params","getProjectsInstances","getServers","postServer","server","postInstance","instance","patchInstance","patch","patchInstanceEmails","mails","deleteInstance","delete","patchUpdate","update","postUpdate","deleteUpdate","getUpdates","getNextsUpdates","instanceId","getJiraProject","Validators","ctx_r7","InstanceComponent","fb","projectxApi","activeModal","projectsService","group","target","required","type","erpProject","serverNumber","key","emails","ngOnInit","mode","_a","instanceForm","controls","setValue","project","_b","number","_c","join","subscribe","projects","onSubmit","createInstance","value","instanceOK","form","split","confirm","dismissAll","selectors","inputs","servers","decls","vars","consts","template","ctx","LoginComponent","toastr","router","jiraScope","jiraState","username","password","demo","navigate","url","replace","e","Math","floor","random","window","location","warning","NewServerComponent","ctx_r3","ctx_r9","ManagerComponent","serversService","modalService","arrayUtils","sortAlpha","displayInstance","modalRef","open","size","animation","componentInstance","dismissed","editInstance","reason","createServer","refreshProjects","success","getServersInstance","navigator","clipboard","writeText","JSON","stringify","then","selectedServer","instances","openUrl","back","CallbackComponent","route","jiraApi","queryParams","reqAccessToken","catch","name","displayName","emailAddress","access_token","setUser","u","setUserSecret","fields","created","err","jiraUrl","CalendarComponent","sampleData","ctx_r5","project_r2","ProjectsListComponent","modalOptions","backdrop","backdropClass","computeHeights","computeInstance","refreshData","childCalendarComp","openProject","base","itemHeights","p","instanceCounter","viewQuery","saveAs","ctx_r13","ctx_r20","SprintBoardComponent","dateService","init","values","sprints","index","getActiveSprint","sortByDate","sprintSelected","tabs","onSprintChange","spPerReporter","spPerProject","majPerProject","issuePerType","spPerAmeliorationContinue","sprint","i","obj","find","reporter","sp","customfield_10031","spReporter","sort","a","b","filter","r","tdevtot","customfield_10084","customfield_10087","customfield_10091","tdev","ttest","treview","issueList","keep","round","str","reduce","agg","totaldev","unshift","spProject","startDate","substring","indexOf","endDate","majProject","sum","toFixed","issuetype","devTot","issuesType","tab","useOwnJql","jqlSPbyProjectAC","spPerAC","componentsByProject","loadProjects","torage","promise","Promise","resolve","queue","m","m2","q","all","f","shift","components","forEach","c","composant","pId","s","trim","archived","csvArray","blob","Blob","openIssue","endOfDay","format","isAfter","isBefore","isSameDay","startOfDay","fr","ctx_r11","UpdateComponent","jiraId","_id","lastUpdatesInstance","updatesInstance","updatesServer","state","date","toastrConfig","disableTimeOut","dateSelected","dueDate","Date","nextsUpdates","reverse","updateCreateForm","locale","composants","item","getSprint","createUpdate","dateSel","spStart","spEnd","includes","dayClickedEventHander","issueFields","summary","description","_d","_e","toString","customfield_10020","duedate","_f","assignee","preIssue","preUpdate","keyJira","timeOut","title","isLoginGuard","canActivate","userToken","AuthService","localStorage","setItem","setToken","getItem","parse","userReturn","pw"],"sourceRoot":"webpack:///"}